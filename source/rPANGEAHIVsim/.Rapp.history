df	<- subset(df, CONFIG%in%c('mFP25','mFP50','mFP85'))#
	ggplot(df, aes(x=floor(DIAG_T), fill=DIAG_CD4c)) + geom_bar(binwidth=1, position='fill', alpha=0.5) + #
			labs(fill='CD4 category', y='percent of diagnosed', x='year diagnosed') + scale_y_continuous(breaks=seq(0,1,0.1)) + scale_fill_brewer(palette='Set1') +#
			theme_bw() + theme(panel.grid.major.y=element_line(colour="black", size=0.2)) + facet_grid(SC~CONFIG)#
	file	<- paste(indir, '150205_TEST_CD4atDiagnosis.pdf')#
	ggsave(file=file, w=12, h=12)
ggplot(subset(df, !is.na(TIME_SEQ)), aes(x=floor(DIAG_T), fill=DIAG_CD4c)) + geom_bar(binwidth=1, position='fill', alpha=0.5) + #
			labs(fill='CD4 category', y='percent of diagnosed\namong sequenced', x='year diagnosed') + scale_y_continuous(breaks=seq(0,1,0.1)) + scale_fill_brewer(palette='Set1') +#
			theme_bw() + theme(panel.grid.major.y=element_line(colour="black", size=0.2)) + facet_grid(SC~CONFIG)#
	file	<- paste(indir, '150205_TEST_CD4atDiagnosisAmongSequenced.pdf')#
	ggsave(file=file, w=12, h=12)
ggplot(df, aes(x=floor(DIAG_T), fill=RECENT_TR)) + geom_bar(binwidth=1, position='fill', alpha=0.5) + #
			labs(fill='Infected in\nlast 6 months', y='percent of diagnosed', x='year diagnosed') + scale_y_continuous(breaks=seq(0,1,0.1)) + scale_fill_brewer(palette='Set1') +#
			theme_bw() + theme(panel.grid.major.y=element_line(colour="black", size=0.2)) + facet_grid(SC~CONFIG)#
	file	<- paste(indir, '150205_TEST_RECENT.pdf')#
	ggsave(file=file, w=12, h=12)#
	ggplot(subset(df, !is.na(TIME_SEQ) & !is.na(RECENT_TRr)), aes(x=floor(DIAG_T), fill=RECENT_TRr)) + geom_bar(binwidth=1, position='fill', alpha=0.5) + #
			labs(fill='Infected in\nlast 6 months', y='percent of diagnosed\nfor whom recency known and sequenced', x='year diagnosed') + scale_y_continuous(breaks=seq(0,1,0.1)) + scale_fill_brewer(palette='Set1') +#
			theme_bw() + theme(panel.grid.major.y=element_line(colour="black", size=0.2)) + facet_grid(SC~CONFIG)#
	file	<- paste(indir, '150205_TEST_RECENTAmongSequenced50.pdf')#
	ggsave(file=file, w=12, h=12)
800/5
800/5*3
800/5*3+800
480/800
indir			<- '/Users/Oliver/git/HPTN071sim/source/rPANGEAHIVsim/inst/misc'#
			pipeline.args	<- rPANGEAHIVsim.pipeline.args( yr.start=1985, yr.end=2020, seed=42, s.MODEL='Prop2DiagB4I',#
					s.PREV.max=NA, s.INTERVENTION.prop=NA, s.INTERVENTION.start=2015, s.INTERVENTION.mul= NA, s.ARCHIVAL.n=50,#
					epi.model='HPTN071', epi.dt=1/48, epi.import=0.05,#
					v.N0tau=1, v.r=2.851904, v.T50=-2,#
					wher.mu=log(0.00447743)-0.5^2/2, wher.sigma=0.5, bwerm.mu=log(0.002239075)-0.3^2/2, bwerm.sigma=0.3, er.gamma=4,#
					dbg.GTRparam=0, dbg.rER=0, index.starttime.mode='fix1955', startseq.mode='many', seqtime.mode='AtDiag')								#
			# proposed standard run and control simulation#
			pipeline.vary	<- data.table(	seqtime.mode=	c('AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag'),	#
					s.MODEL=				c('Prop2DiagB4I','Prop2DiagB4I','Prop2Untreated','Fixed2Prop','Fixed2Prop','Fixed2Prop','Fixed2Prop','Fixed2Prop','Fixed2Prop'),													#
					startseq.mode=			c('many','many','many','many','many','many','many','many','many'),#
					s.multi=				c(1,2,1,1,1,1,2,1,1),#
					yr.end=					c(2020,2020,2020,2020,2020,2020,2020,2020,2018),#
					epi.import=				c(0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.2,0.05),#
					s.PREV.max.n=			c(1600,1600,1600,1600,1600,1600,1600,1600,1280),#
					s.INTERVENTION.prop=	c(NA,NA,NA,0.85,0.5,0.25,0.5,0.5,0.6),#
					s.INTERVENTION.mul=		c(1,1,1,NA,NA,NA,NA,NA,NA),#
					label=					c('-mDI','-mDIs2x','-mPU','-mFP85','-mFP50','-mFP25','-mFP50s2x','-mFP50c20','-mFP50e18'))
pipeline.vary
pipeline.vary[9,]
pipeline.vary<- pipeline.vary[9,]
dummy			<- pipeline.vary[, {				#
						set(pipeline.args, which( pipeline.args$stat=='seqtime.mode' ), 'v', as.character(seqtime.mode))#
						set(pipeline.args, which( pipeline.args$stat=='s.MODEL' ), 'v', as.character(s.MODEL))											#
						set(pipeline.args, which( pipeline.args$stat=='startseq.mode' ), 'v', as.character(startseq.mode))#
						set(pipeline.args, which( pipeline.args$stat=='s.INTERVENTION.mul' ), 'v', as.character(s.INTERVENTION.mul))#
						set(pipeline.args, which( pipeline.args$stat=='s.INTERVENTION.prop' ), 'v', as.character(s.INTERVENTION.prop))#
						set(pipeline.args, which( pipeline.args$stat=='epi.import' ), 'v', as.character(epi.import))#
						print(pipeline.args)						#
						if(1)#
						{#
							#	scenario A					#
							infile.ind		<- '150129_HPTN071_scA'#
							infile.trm		<- '150129_HPTN071_scA'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-A'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																								#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario B					#
							infile.ind		<- '150129_HPTN071_scB'#
							infile.trm		<- '150129_HPTN071_scB'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-B'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario C					#
							infile.ind		<- '150129_HPTN071_scC'#
							infile.trm		<- '150129_HPTN071_scC'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-C'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario D					#
							infile.ind		<- '150129_HPTN071_scD'#
							infile.trm		<- '150129_HPTN071_scD'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-D'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario E					#
							infile.ind		<- '150129_HPTN071_scE'#
							infile.trm		<- '150129_HPTN071_scE'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-E'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario F					#
							infile.ind		<- '150129_HPTN071_scF'#
							infile.trm		<- '150129_HPTN071_scF'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-F'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																									#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}					#
					}, by='label']
480/1280
pipeline.vary	<- data.table(	seqtime.mode=	c('AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag'),	#
					s.MODEL=				c('Prop2DiagB4I','Prop2DiagB4I','Prop2Untreated','Fixed2Prop','Fixed2Prop','Fixed2Prop','Fixed2Prop','Fixed2Prop','Fixed2Prop'),													#
					startseq.mode=			c('many','many','many','many','many','many','many','many','many'),#
					s.multi=				c(1,2,1,1,1,1,2,1,1),#
					yr.end=					c(2020,2020,2020,2020,2020,2020,2020,2020,2018),#
					epi.import=				c(0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.2,0.05),#
					s.PREV.max.n=			c(1600,1600,1600,1600,1600,1600,1600,1600,1280),#
					s.INTERVENTION.prop=	c(NA,NA,NA,0.85,0.5,0.25,0.5,0.5,0.375),#
					s.INTERVENTION.mul=		c(1,1,1,NA,NA,NA,NA,NA,NA),#
					label=					c('-mDI','-mDIs2x','-mPU','-mFP85','-mFP50','-mFP25','-mFP50s2x','-mFP50c20','-mFP50e18'))						#
			dummy			<- pipeline.vary[, {				#
						set(pipeline.args, which( pipeline.args$stat=='seqtime.mode' ), 'v', as.character(seqtime.mode))#
						set(pipeline.args, which( pipeline.args$stat=='s.MODEL' ), 'v', as.character(s.MODEL))											#
						set(pipeline.args, which( pipeline.args$stat=='startseq.mode' ), 'v', as.character(startseq.mode))#
						set(pipeline.args, which( pipeline.args$stat=='s.INTERVENTION.mul' ), 'v', as.character(s.INTERVENTION.mul))#
						set(pipeline.args, which( pipeline.args$stat=='s.INTERVENTION.prop' ), 'v', as.character(s.INTERVENTION.prop))#
						set(pipeline.args, which( pipeline.args$stat=='epi.import' ), 'v', as.character(epi.import))#
						print(pipeline.args)						#
						if(1)#
						{#
							#	scenario A					#
							infile.ind		<- '150129_HPTN071_scA'#
							infile.trm		<- '150129_HPTN071_scA'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-A'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																								#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario B					#
							infile.ind		<- '150129_HPTN071_scB'#
							infile.trm		<- '150129_HPTN071_scB'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-B'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario C					#
							infile.ind		<- '150129_HPTN071_scC'#
							infile.trm		<- '150129_HPTN071_scC'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-C'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario D					#
							infile.ind		<- '150129_HPTN071_scD'#
							infile.trm		<- '150129_HPTN071_scD'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-D'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario E					#
							infile.ind		<- '150129_HPTN071_scE'#
							infile.trm		<- '150129_HPTN071_scE'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-E'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario F					#
							infile.ind		<- '150129_HPTN071_scF'#
							infile.trm		<- '150129_HPTN071_scF'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-F'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																									#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}					#
					}, by='label']
pipeline.vary	<- data.table(	seqtime.mode=	c('AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag'),	#
					s.MODEL=				c('Prop2DiagB4I','Prop2DiagB4I','Prop2Untreated','Fixed2Prop','Fixed2Prop','Fixed2Prop','Fixed2Prop','Fixed2Prop','Fixed2Prop'),													#
					startseq.mode=			c('many','many','many','many','many','many','many','many','many'),#
					s.multi=				c(1,2,1,1,1,1,2,1,1),#
					yr.end=					c(2020,2020,2020,2020,2020,2020,2020,2020,2018),#
					epi.import=				c(0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.2,0.05),#
					s.PREV.max.n=			c(1600,1600,1600,1600,1600,1600,1600,1600,1280),#
					s.INTERVENTION.prop=	c(NA,NA,NA,0.85,0.5,0.25,0.5,0.5,0.375),#
					s.INTERVENTION.mul=		c(1,1,1,NA,NA,NA,NA,NA,NA),#
					label=					c('-mDI','-mDIs2x','-mPU','-mFP85','-mFP50','-mFP25','-mFP50s2x','-mFP50c20','-mFP50e18'))
pipeline.vary
pipeline.vary<- pipeline.vary[9,]
dummy			<- pipeline.vary[, {				#
						set(pipeline.args, which( pipeline.args$stat=='seqtime.mode' ), 'v', as.character(seqtime.mode))#
						set(pipeline.args, which( pipeline.args$stat=='s.MODEL' ), 'v', as.character(s.MODEL))											#
						set(pipeline.args, which( pipeline.args$stat=='startseq.mode' ), 'v', as.character(startseq.mode))#
						set(pipeline.args, which( pipeline.args$stat=='s.INTERVENTION.mul' ), 'v', as.character(s.INTERVENTION.mul))#
						set(pipeline.args, which( pipeline.args$stat=='s.INTERVENTION.prop' ), 'v', as.character(s.INTERVENTION.prop))#
						set(pipeline.args, which( pipeline.args$stat=='epi.import' ), 'v', as.character(epi.import))#
						print(pipeline.args)						#
						if(1)#
						{#
							#	scenario A					#
							infile.ind		<- '150129_HPTN071_scA'#
							infile.trm		<- '150129_HPTN071_scA'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-A'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																								#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario B					#
							infile.ind		<- '150129_HPTN071_scB'#
							infile.trm		<- '150129_HPTN071_scB'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-B'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario C					#
							infile.ind		<- '150129_HPTN071_scC'#
							infile.trm		<- '150129_HPTN071_scC'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-C'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario D					#
							infile.ind		<- '150129_HPTN071_scD'#
							infile.trm		<- '150129_HPTN071_scD'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-D'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario E					#
							infile.ind		<- '150129_HPTN071_scE'#
							infile.trm		<- '150129_HPTN071_scE'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-E'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario F					#
							infile.ind		<- '150129_HPTN071_scF'#
							infile.trm		<- '150129_HPTN071_scF'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-F'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																									#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}					#
					}, by='label']
sample(c(1,2,3,4),0)
df.inds
tmp			<- subset( df.inds, !is.na(TIME_SEQ), select=c(IDPOP, GENDER, DOB, DOD, DIAG_T, DIAG_CD4, ART1_T, ART1_CD4, TIME_SEQ, RECENT_TR ) )
tmp
subset(tmp, is.na(DIAG_T))
tmp2		<- tmp[, which(is.na(DIAG_T) & TIME_SEQ<2000)]#
		cat(paste('\nSet patient variables to NA for archival seq, n=',length(tmp2)))
str(df.inds)
set(tmp, NULL, 'GENDER', tmp[,as.character(GENDER)])
tmp2		<- tmp[, which(is.na(DIAG_T) & TIME_SEQ>=2000)]#
		cat(paste('\nSet patient variables to NA after 200, n=',length(tmp2)))#
		print(tmp[tmp2,])
indir			<- '/Users/Oliver/git/HPTN071sim/source/rPANGEAHIVsim/inst/misc'#
		pipeline.args	<- rPANGEAHIVsim.pipeline.args( yr.start=1980, yr.end=2020, seed=42, s.MODEL='Prop2DiagB4I',#
				s.PREV.max=0.08, s.INTERVENTION.start=2015, s.INTERVENTION.mul= 2, s.ARCHIVAL.n=50,#
				epi.model='HPTN071', epi.dt=1/48, epi.import=0.05,#
				v.N0tau=1, v.r=2.851904, v.T50=-2,#
				wher.mu=log(0.003358613)-0.3^2/2, wher.sigma=0.3, bwerm.mu=log(0.002239075)-0.13^2/2, bwerm.sigma=0.13, er.gamma=NA,#
				sp.prop.of.sexactive= 0.05, report.prop.recent=1.0, #
				dbg.GTRparam=0, dbg.rER=0, index.starttime.mode='fix1955', startseq.mode='one', seqtime.mode='AtDiag')								#
		# proposed standard run and control simulation#
		pipeline.vary	<- data.table(	seqtime.mode=	c('AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtTrm'),	#
										s.MODEL=		c('Prop2DiagB4I','Prop2DiagB4I','Prop2DiagB4I','Prop2DiagB4I','Prop2DiagB4I','Prop2Untreated'),#
										startseq.mode=	c('one','one', 'one','many','one','one'),#
										epi.import=		c(0.05, 0.05, 0.05, 0.05, 0, 0),#
										wher.mu=		c(log(0.003358613), log(0.003358613)-0.3^2/2, log(0.003358613)-0.3^2/2, log(0.003358613)-0.3^2/2, log(0.002239075)-0.13^2/2, log(0.002239075)-0.13^2/2),#
										wher.sigma=		c(0, 0.3, 0.3, 0.3,0.13,0.13),#
										bwerm.mu=		c(log(0.002239075), log(0.002239075)-0.13^2/2, log(0.002239075)-0.13^2/2, log(0.002239075)-0.13^2/2, log(0.002239075)-0.13^2/2, log(0.002239075)-0.13^2/2),#
										bwerm.sigma=	c(0, 0.13, 0.13, 0.13, 0.13, 0.13), #
										dbg.GTRparam= 	c(1, 1, 0, 0, 0, 0),#
										dbg.rER=		c(1, 1, 0, 0, 0, 0),										#
										label=			c('-o5111DI', '-o5011DI', '-o5DI','-m5DI','-o0DI','-o0PU'))
pipeline.vary
indir			<- '/Users/Oliver/git/HPTN071sim/source/rPANGEAHIVsim/inst/misc'#
			pipeline.args	<- rPANGEAHIVsim.pipeline.args( yr.start=1985, yr.end=2020, seed=42, s.MODEL='Prop2DiagB4I', report.prop.recent=1.0,#
					s.PREV.max=NA, s.INTERVENTION.prop=NA, s.INTERVENTION.start=2015, s.INTERVENTION.mul= NA, s.ARCHIVAL.n=50,#
					epi.model='HPTN071', epi.dt=1/48, epi.import=0.05,#
					v.N0tau=1, v.r=2.851904, v.T50=-2,#
					wher.mu=log(0.00447743)-0.5^2/2, wher.sigma=0.5, bwerm.mu=log(0.002239075)-0.3^2/2, bwerm.sigma=0.3, er.gamma=4,#
					dbg.GTRparam=0, dbg.rER=0, index.starttime.mode='fix1955', startseq.mode='many', seqtime.mode='AtDiag')								#
			# proposed standard run and control simulation#
			pipeline.vary	<- data.table(	seqtime.mode=	c('AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag'),	#
					s.MODEL=				c('Prop2DiagB4I','Prop2DiagB4I','Prop2Untreated','Fixed2Prop','Fixed2Prop','Fixed2Prop','Fixed2Prop','Fixed2Prop','Fixed2Prop'),													#
					startseq.mode=			c('many','many','many','many','many','many','many','many','many'),#
					s.multi=				c(1,2,1,1,1,1,2,1,1),#
					yr.end=					c(2020,2020,2020,2020,2020,2020,2020,2020,2018),#
					epi.import=				c(0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.2,0.05),#
					s.PREV.max.n=			c(1600,1600,1600,1600,1600,1600,1600,1600,1280),#
					s.INTERVENTION.prop=	c(NA,NA,NA,0.85,0.5,0.25,0.5,0.5,0.375),#
					s.INTERVENTION.mul=		c(1,1,1,NA,NA,NA,NA,NA,NA),#
					label=					c('-mDI','-mDIs2x','-mPU','-mFP85','-mFP50','-mFP25','-mFP50s2x','-mFP50c20','-mFP50e18'))
pipeline.vary
pipeline.vary<- pipeline.vary[5,]
pipeline.vary
dummy			<- pipeline.vary[, {				#
						set(pipeline.args, which( pipeline.args$stat=='seqtime.mode' ), 'v', as.character(seqtime.mode))#
						set(pipeline.args, which( pipeline.args$stat=='s.MODEL' ), 'v', as.character(s.MODEL))											#
						set(pipeline.args, which( pipeline.args$stat=='startseq.mode' ), 'v', as.character(startseq.mode))#
						set(pipeline.args, which( pipeline.args$stat=='s.INTERVENTION.mul' ), 'v', as.character(s.INTERVENTION.mul))#
						set(pipeline.args, which( pipeline.args$stat=='s.INTERVENTION.prop' ), 'v', as.character(s.INTERVENTION.prop))#
						set(pipeline.args, which( pipeline.args$stat=='epi.import' ), 'v', as.character(epi.import))#
						print(pipeline.args)						#
						if(1)#
						{#
							#	scenario A					#
							infile.ind		<- '150129_HPTN071_scA'#
							infile.trm		<- '150129_HPTN071_scA'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-A'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																								#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario B					#
							infile.ind		<- '150129_HPTN071_scB'#
							infile.trm		<- '150129_HPTN071_scB'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-B'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario C					#
							infile.ind		<- '150129_HPTN071_scC'#
							infile.trm		<- '150129_HPTN071_scC'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-C'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario D					#
							infile.ind		<- '150129_HPTN071_scD'#
							infile.trm		<- '150129_HPTN071_scD'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-D'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario E					#
							infile.ind		<- '150129_HPTN071_scE'#
							infile.trm		<- '150129_HPTN071_scE'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-E'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario F					#
							infile.ind		<- '150129_HPTN071_scF'#
							infile.trm		<- '150129_HPTN071_scF'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-F'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																									#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}					#
					}, by='label']
require(phytools)#
	require(hivclust)#
	tree.id.labelsep		<- '|'#
	tree.id.label.idx.ctime	<- 4 #
	indir		<- '/Users/Oliver/duke/2014_Gates/methods_comparison_pipeline/150205'  #
	outdir		<- '/Users/Oliver/duke/2014_Gates/methods_comparison_pipeline/150205'#
	infiles		<- list.files(indir, '.*INTERNAL.R$', full.names=FALSE)
gene			<- 'pol'#
	infiles			<- list.files(indir, paste('^ExaML_result.*',gene,'seq.*finaltree.000$',sep=''), full.names=FALSE)#
	for(i in seq_along(infiles))#
	{#
		infile			<- infiles[i]#
		file			<- paste(indir,'/',infile,sep='')#
		ph				<- read.tree(file)#
		tmp				<- regmatches(infile,regexpr('.*_INFO',infile))#
		file			<- paste(indir,'/', substr(tmp, 14, nchar(tmp)-4),"SIMULATED_INTERNAL.R",sep='')#
		#tmp				<- substring(infile, 14)		#
		#tmp				<- list.files(indir, paste(substr(tmp, 1, regexpr('_INFO',tmp) ),'.*INTERNAL.R$', sep=''), full.names=FALSE)#
		#cat(paste('\nLoad file=',tmp))		#
		load(file)#
		tmp				<- which(ph$tip.label=="HXB2")#
		ph				<- reroot(ph, tmp, ph$edge.length[which(ph$edge[,2]==tmp)])#
		ph				<- ladderize(ph)		#
		file			<- paste( outdir, '/', substr(infile,1,nchar(infile)-20),'INFO_simu_ExaML',gene,'.pdf', sep='' )	#
		pdf(file=file, w=10, h=150)#
		plot(ph, show.tip=TRUE, cex=0.5)#
		add.scale.bar()#
		dev.off()	#
		#	get root to tip divergence#
		ph				<- drop.tip(ph,'HXB2')#
		file			<- paste( outdir, '/', substr(infile,1,nchar(infile)-20),'INFO_simu_ExaML',gene,'.newick', sep='' )#
		write.tree(file=file, ph)		#
		tmp				<- node.depth.edgelength(ph)#
		ph.info			<- data.table(LABEL=ph$tip.label, ROOT2TIP=tmp[seq_len(Ntip(ph))] )#
		set(ph.info, NULL, 'IDPOP', ph.info[, sapply(strsplit(LABEL, tree.id.labelsep, fixed=TRUE),'[[',1) ])#
		set(ph.info, NULL, 'IDPOP', ph.info[, as.integer(substr(IDPOP, 7, nchar(IDPOP)))])#
		ph.info			<- merge(ph.info, subset(df.inds, select=c(IDPOP, IDCLU)), by='IDPOP')#
		set(ph.info, NULL, 'IDCLU', ph.info[, factor(IDCLU)])#
		set(ph.info, NULL, 'CALENDAR_TIME', ph.info[, as.numeric(sapply(strsplit(LABEL, tree.id.labelsep, fixed=TRUE),'[[',tree.id.label.idx.ctime))] )#
		tmp				<- lm(ROOT2TIP~CALENDAR_TIME, data=ph.info)		 #
		set( ph.info, NULL, 'ROOT2TIP_LM', predict(tmp, type='response') ) 	#
		tmp2			<- c( R2=round(summary(tmp)$r.squared,d=3), SLOPE= as.numeric(round(coef(tmp)['CALENDAR_TIME'],d=4)), TMRCA=as.numeric(round( -coef(tmp)['(Intercept)']/coef(tmp)['CALENDAR_TIME'], d=1 )) )#
		ggplot(ph.info, aes(x=CALENDAR_TIME, y=ROOT2TIP, colour=IDCLU)) + geom_point(alpha=0.75) + geom_line(alpha=0.1, aes(group=IDCLU)) + geom_line(aes(y=ROOT2TIP_LM)) +#
				#scale_x_continuous(breaks=seq(1980,2020,2)) +						#
				scale_colour_discrete(guide=FALSE) +#
				labs(x='Sequence sampling date', y=paste('root-to-tip divergence\n(HIV-1',gene,'sequences)')) +#
				annotate("text", x=ph.info[, min(CALENDAR_TIME)], y=ph.info[, 0.9*max(ROOT2TIP)], label=paste("R2=", tmp2['R2'],'\nSlope=',tmp2['SLOPE'],'\nTMRCA=',tmp2['TMRCA'], sep=''), hjust = 0, size = 4) +#
				theme(legend.position=c(0,1), legend.justification=c(0,1))		#
		file			<- paste( outdir, '/', substr(infile,1,nchar(infile)-20),'INFO_simu_ExaML',gene,'R2.pdf', sep='' )#
		ggsave(file=file, w=10, h=6)	#
		##
		if(0)#
		{#
			nclu			<- subset(df.inds, !is.na(IDCLU))[, length(unique(IDCLU))]#
			cat(paste('\nNumber of transmission clusters, n=', nclu))		#
			tmp				<- hivc.clu.brdist.stats(ph, eval.dist.btw="leaf", stat.fun=hivc.clu.min.transmission.cascade)#
			#	almost random choice: 0.05 #
			clustering		<- hivc.clu.clusterbythresh(ph, thresh.brl=0.05, dist.brl=tmp, retval="all")#
			tmp				<- data.table( LABEL=ph$tip.label, EXACLUID= clustering$clu.mem[ seq_len(Ntip(ph))] )#
			tmp[, IDPOP:= tmp[, as.integer(substring(sapply(strsplit(LABEL,'|',fixed=TRUE),'[[',1),7))]]#
			ph.inds			<- merge( df.inds, tmp, by='IDPOP' )		#
			tmp				<- subset(ph.inds, !is.na(EXACLUID))[, {#
						tmp				<- extract.clade(ph, hivc.clu.mrca(ph, LABEL)$mrca, root.edge=1)#
						tmp$root.edge	<- 0					#
						list( LABEL=tmp$tip.label, ROOT2TIP=node.depth.edgelength(tmp)[seq_len(Ntip(tmp))] )					#
					}, by='EXACLUID']#
			ph.inds			<- merge(ph.inds, tmp, by=c('EXACLUID','LABEL'), all.x=TRUE)#
			ph.inds			<- merge(ph.inds, subset(ph.inds, !is.na(EXACLUID))[, list(EXACLUID_N=length(IDPOP)), by='EXACLUID'], by='EXACLUID', all.x=TRUE)#
			clx.info		<- subset(ph.inds, EXACLUID_N==max(EXACLUID_N, na.rm=1))#
			ggplot(clx.info, aes(x=TIME_SEQ, y=ROOT2TIP, colour=IDCLU)) + geom_point(alpha=0.75) 	#
		}		#
	}
indir			<- '/Users/Oliver/git/HPTN071sim/source/rPANGEAHIVsim/inst/misc'#
			pipeline.args	<- rPANGEAHIVsim.pipeline.args( yr.start=1985, yr.end=2020, seed=42, s.MODEL='Prop2DiagB4I', report.prop.recent=1.0,#
					s.PREV.max=1600, s.INTERVENTION.prop=0.5, s.INTERVENTION.start=2015, s.INTERVENTION.mul= NA, s.ARCHIVAL.n=50,#
					epi.model='HPTN071', epi.dt=1/48, epi.import=0.05,#
					v.N0tau=1, v.r=2.851904, v.T50=-2,#
					wher.mu=log(0.00447743)-0.5^2/2, wher.sigma=0.5, bwerm.mu=log(0.002239075)-0.3^2/2, bwerm.sigma=0.3, er.gamma=4,#
					dbg.GTRparam=0, dbg.rER=0, index.starttime.mode='fix1955', startseq.mode='many', seqtime.mode='AtDiag')								#
			# proposed standard run and control simulation#
			pipeline.vary	<- data.table(	wher.mu=				c(log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.3^2/2),#
											wher.sigma=				c(0.5,0.5,0.5,0.3),#
											bwerm.mu=				c(log(0.002239075)-0.3^2/2, log(0.002239075)-0.2^2/2, log(0.002239075)-0.16^2/2, log(0.002239075)-0.16^2/2),#
											bwerm.sigma=			c(0.3, 0.2, 0.16, 0.16),#
											label=					c('-bh30','-bh20','-bh16','-wh30'))						#
			dummy			<- pipeline.vary[, {				#
						set(pipeline.args, which( pipeline.args$stat=='wher.mu' ), 'v', as.character(wher.mu))#
						set(pipeline.args, which( pipeline.args$stat=='wher.sigma' ), 'v', as.character(wher.sigma))											#
						set(pipeline.args, which( pipeline.args$stat=='bwerm.mu' ), 'v', as.character(bwerm.mu))#
						set(pipeline.args, which( pipeline.args$stat=='bwerm.sigma' ), 'v', as.character(bwerm.sigma))#
						print(pipeline.args)						#
						if(1)#
						{#
							#	scenario A					#
							infile.ind		<- '150129_HPTN071_scA'#
							infile.trm		<- '150129_HPTN071_scA'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150206-A'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																															#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}					#
						if(1)#
						{#
							#	scenario E					#
							infile.ind		<- '150129_HPTN071_scE'#
							infile.trm		<- '150129_HPTN071_scE'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150206-E'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																									#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}											#
					}, by='label']
indir			<- '/Users/Oliver/git/HPTN071sim/source/rPANGEAHIVsim/inst/misc'#
			pipeline.args	<- rPANGEAHIVsim.pipeline.args( yr.start=1985, yr.end=2020, seed=42, s.MODEL='Fixed2Prop', report.prop.recent=1.0,#
					s.PREV.max=1600, s.INTERVENTION.prop=0.5, s.INTERVENTION.start=2015, s.INTERVENTION.mul= NA, s.ARCHIVAL.n=50,#
					epi.model='HPTN071', epi.dt=1/48, epi.import=0.05,#
					v.N0tau=1, v.r=2.851904, v.T50=-2,#
					wher.mu=log(0.00447743)-0.5^2/2, wher.sigma=0.5, bwerm.mu=log(0.002239075)-0.3^2/2, bwerm.sigma=0.3, er.gamma=4,#
					dbg.GTRparam=0, dbg.rER=0, index.starttime.mode='fix1955', startseq.mode='many', seqtime.mode='AtDiag')								#
			# proposed standard run and control simulation#
			pipeline.vary	<- data.table(	wher.mu=				c(log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.3^2/2),#
											wher.sigma=				c(0.5,0.5,0.5,0.3),#
											bwerm.mu=				c(log(0.002239075)-0.3^2/2, log(0.002239075)-0.2^2/2, log(0.002239075)-0.16^2/2, log(0.002239075)-0.16^2/2),#
											bwerm.sigma=			c(0.3, 0.2, 0.16, 0.16),#
											label=					c('-bh30','-bh20','-bh16','-wh30'))						#
			dummy			<- pipeline.vary[, {				#
						set(pipeline.args, which( pipeline.args$stat=='wher.mu' ), 'v', as.character(wher.mu))#
						set(pipeline.args, which( pipeline.args$stat=='wher.sigma' ), 'v', as.character(wher.sigma))											#
						set(pipeline.args, which( pipeline.args$stat=='bwerm.mu' ), 'v', as.character(bwerm.mu))#
						set(pipeline.args, which( pipeline.args$stat=='bwerm.sigma' ), 'v', as.character(bwerm.sigma))#
						print(pipeline.args)						#
						if(1)#
						{#
							#	scenario A					#
							infile.ind		<- '150129_HPTN071_scA'#
							infile.trm		<- '150129_HPTN071_scA'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150206-A'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																															#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}					#
						if(1)#
						{#
							#	scenario E					#
							infile.ind		<- '150129_HPTN071_scE'#
							infile.trm		<- '150129_HPTN071_scE'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150206-E'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																									#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}											#
					}, by='label']
indir			<- '/Users/Oliver/git/HPTN071sim/source/rPANGEAHIVsim/inst/misc'#
			pipeline.args	<- rPANGEAHIVsim.pipeline.args( yr.start=1985, yr.end=2020, seed=42, s.MODEL='Fixed2Prop', report.prop.recent=1.0,#
					s.PREV.max.n=1600, s.INTERVENTION.prop=0.5, s.INTERVENTION.start=2015, s.INTERVENTION.mul= NA, s.ARCHIVAL.n=50,#
					epi.model='HPTN071', epi.dt=1/48, epi.import=0.05,#
					v.N0tau=1, v.r=2.851904, v.T50=-2,#
					wher.mu=log(0.00447743)-0.5^2/2, wher.sigma=0.5, bwerm.mu=log(0.002239075)-0.3^2/2, bwerm.sigma=0.3, er.gamma=4,#
					dbg.GTRparam=0, dbg.rER=0, index.starttime.mode='fix1955', startseq.mode='many', seqtime.mode='AtDiag')								#
			# proposed standard run and control simulation#
			pipeline.vary	<- data.table(	wher.mu=				c(log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.3^2/2),#
											wher.sigma=				c(0.5,0.5,0.5,0.3),#
											bwerm.mu=				c(log(0.002239075)-0.3^2/2, log(0.002239075)-0.2^2/2, log(0.002239075)-0.16^2/2, log(0.002239075)-0.16^2/2),#
											bwerm.sigma=			c(0.3, 0.2, 0.16, 0.16),#
											label=					c('-bh30','-bh20','-bh16','-wh30'))						#
			dummy			<- pipeline.vary[, {				#
						set(pipeline.args, which( pipeline.args$stat=='wher.mu' ), 'v', as.character(wher.mu))#
						set(pipeline.args, which( pipeline.args$stat=='wher.sigma' ), 'v', as.character(wher.sigma))											#
						set(pipeline.args, which( pipeline.args$stat=='bwerm.mu' ), 'v', as.character(bwerm.mu))#
						set(pipeline.args, which( pipeline.args$stat=='bwerm.sigma' ), 'v', as.character(bwerm.sigma))#
						print(pipeline.args)						#
						if(1)#
						{#
							#	scenario A					#
							infile.ind		<- '150129_HPTN071_scA'#
							infile.trm		<- '150129_HPTN071_scA'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150206-A'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																															#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}					#
						if(1)#
						{#
							#	scenario E					#
							infile.ind		<- '150129_HPTN071_scE'#
							infile.trm		<- '150129_HPTN071_scE'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150206-E'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																									#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}											#
					}, by='label']
tmp					<- PANGEA.RootSeq.create.sampler(root.ctime.grace= 0.5, sample.grace= 3 )
rANCSEQ				<- tmp$rANCSEQ#
	rANCSEQ.args		<- tmp$rANCSEQ.args
rANCSEQ(rep(1955,370), rANCSEQ.args)
rANCSEQ(rep(1955,390), rANCSEQ.args)
rANCSEQ(rep(1955,400), rANCSEQ.args)
require(phytools)#
	require(hivclust)#
	tree.id.labelsep		<- '|'#
	tree.id.label.idx.ctime	<- 4 #
	indir		<- '/Users/Oliver/duke/2014_Gates/methods_comparison_pipeline/150206'  #
	outdir		<- '/Users/Oliver/duke/2014_Gates/methods_comparison_pipeline/150206'#
	infiles		<- list.files(indir, '.*INTERNAL.R$', full.names=FALSE)
gene			<- 'pol'#
	infiles			<- list.files(indir, paste('^ExaML_result.*',gene,'seq.*finaltree.000$',sep=''), full.names=FALSE)#
	for(i in seq_along(infiles))#
	{#
		infile			<- infiles[i]#
		file			<- paste(indir,'/',infile,sep='')#
		ph				<- read.tree(file)#
		tmp				<- regmatches(infile,regexpr('.*_INFO',infile))#
		file			<- paste(indir,'/', substr(tmp, 14, nchar(tmp)-4),"SIMULATED_INTERNAL.R",sep='')#
		#tmp				<- substring(infile, 14)		#
		#tmp				<- list.files(indir, paste(substr(tmp, 1, regexpr('_INFO',tmp) ),'.*INTERNAL.R$', sep=''), full.names=FALSE)#
		#cat(paste('\nLoad file=',tmp))		#
		load(file)#
		tmp				<- which(ph$tip.label=="HXB2")#
		ph				<- reroot(ph, tmp, ph$edge.length[which(ph$edge[,2]==tmp)])#
		ph				<- ladderize(ph)		#
		file			<- paste( outdir, '/', substr(infile,1,nchar(infile)-20),'INFO_simu_ExaML',gene,'.pdf', sep='' )	#
		pdf(file=file, w=10, h=150)#
		plot(ph, show.tip=TRUE, cex=0.5)#
		add.scale.bar()#
		dev.off()	#
		#	get root to tip divergence#
		ph				<- drop.tip(ph,'HXB2')#
		file			<- paste( outdir, '/', substr(infile,1,nchar(infile)-20),'INFO_simu_ExaML',gene,'.newick', sep='' )#
		write.tree(file=file, ph)		#
		tmp				<- node.depth.edgelength(ph)#
		ph.info			<- data.table(LABEL=ph$tip.label, ROOT2TIP=tmp[seq_len(Ntip(ph))] )#
		set(ph.info, NULL, 'IDPOP', ph.info[, sapply(strsplit(LABEL, tree.id.labelsep, fixed=TRUE),'[[',1) ])#
		set(ph.info, NULL, 'IDPOP', ph.info[, as.integer(substr(IDPOP, 7, nchar(IDPOP)))])#
		ph.info			<- merge(ph.info, subset(df.inds, select=c(IDPOP, IDCLU)), by='IDPOP')#
		set(ph.info, NULL, 'IDCLU', ph.info[, factor(IDCLU)])#
		set(ph.info, NULL, 'CALENDAR_TIME', ph.info[, as.numeric(sapply(strsplit(LABEL, tree.id.labelsep, fixed=TRUE),'[[',tree.id.label.idx.ctime))] )#
		tmp				<- lm(ROOT2TIP~CALENDAR_TIME, data=ph.info)		 #
		set( ph.info, NULL, 'ROOT2TIP_LM', predict(tmp, type='response') ) 	#
		tmp2			<- c( R2=round(summary(tmp)$r.squared,d=3), SLOPE= as.numeric(round(coef(tmp)['CALENDAR_TIME'],d=4)), TMRCA=as.numeric(round( -coef(tmp)['(Intercept)']/coef(tmp)['CALENDAR_TIME'], d=1 )) )#
		ggplot(ph.info, aes(x=CALENDAR_TIME, y=ROOT2TIP, colour=IDCLU)) + geom_point(alpha=0.75) + geom_line(alpha=0.1, aes(group=IDCLU)) + geom_line(aes(y=ROOT2TIP_LM)) +#
				#scale_x_continuous(breaks=seq(1980,2020,2)) +						#
				scale_colour_discrete(guide=FALSE) +#
				labs(x='Sequence sampling date', y=paste('root-to-tip divergence\n(HIV-1',gene,'sequences)')) +#
				annotate("text", x=ph.info[, min(CALENDAR_TIME)], y=ph.info[, 0.9*max(ROOT2TIP)], label=paste("R2=", tmp2['R2'],'\nSlope=',tmp2['SLOPE'],'\nTMRCA=',tmp2['TMRCA'], sep=''), hjust = 0, size = 4) +#
				theme(legend.position=c(0,1), legend.justification=c(0,1))		#
		file			<- paste( outdir, '/', substr(infile,1,nchar(infile)-20),'INFO_simu_ExaML',gene,'R2.pdf', sep='' )#
		ggsave(file=file, w=10, h=6)	#
		##
		if(0)#
		{#
			nclu			<- subset(df.inds, !is.na(IDCLU))[, length(unique(IDCLU))]#
			cat(paste('\nNumber of transmission clusters, n=', nclu))		#
			tmp				<- hivc.clu.brdist.stats(ph, eval.dist.btw="leaf", stat.fun=hivc.clu.min.transmission.cascade)#
			#	almost random choice: 0.05 #
			clustering		<- hivc.clu.clusterbythresh(ph, thresh.brl=0.05, dist.brl=tmp, retval="all")#
			tmp				<- data.table( LABEL=ph$tip.label, EXACLUID= clustering$clu.mem[ seq_len(Ntip(ph))] )#
			tmp[, IDPOP:= tmp[, as.integer(substring(sapply(strsplit(LABEL,'|',fixed=TRUE),'[[',1),7))]]#
			ph.inds			<- merge( df.inds, tmp, by='IDPOP' )		#
			tmp				<- subset(ph.inds, !is.na(EXACLUID))[, {#
						tmp				<- extract.clade(ph, hivc.clu.mrca(ph, LABEL)$mrca, root.edge=1)#
						tmp$root.edge	<- 0					#
						list( LABEL=tmp$tip.label, ROOT2TIP=node.depth.edgelength(tmp)[seq_len(Ntip(tmp))] )					#
					}, by='EXACLUID']#
			ph.inds			<- merge(ph.inds, tmp, by=c('EXACLUID','LABEL'), all.x=TRUE)#
			ph.inds			<- merge(ph.inds, subset(ph.inds, !is.na(EXACLUID))[, list(EXACLUID_N=length(IDPOP)), by='EXACLUID'], by='EXACLUID', all.x=TRUE)#
			clx.info		<- subset(ph.inds, EXACLUID_N==max(EXACLUID_N, na.rm=1))#
			ggplot(clx.info, aes(x=TIME_SEQ, y=ROOT2TIP, colour=IDCLU)) + geom_point(alpha=0.75) 	#
		}		#
	}
indir			<- '/Users/Oliver/git/HPTN071sim/source/rPANGEAHIVsim/inst/misc'#
			pipeline.args	<- rPANGEAHIVsim.pipeline.args( yr.start=1985, yr.end=2020, seed=42, s.MODEL='Fixed2Prop', report.prop.recent=1.0,#
					s.PREV.max.n=1600, s.INTERVENTION.prop=0.5, s.INTERVENTION.start=2015, s.INTERVENTION.mul= NA, s.ARCHIVAL.n=50,#
					epi.model='HPTN071', epi.dt=1/48, epi.import=0.05,#
					v.N0tau=1, v.r=2.851904, v.T50=-2,#
					wher.mu=log(0.00447743)-0.5^2/2, wher.sigma=0.5, bwerm.mu=log(0.002239075)-0.3^2/2, bwerm.sigma=0.3, er.gamma=4,#
					dbg.GTRparam=0, dbg.rER=0, index.starttime.mode='fix1955', startseq.mode='many', seqtime.mode='AtDiag')								#
			# proposed standard run and control simulation#
			pipeline.vary	<- data.table(	wher.mu=				c(log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.3^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.3^2/2),#
											wher.sigma=				c(0.5,0.5,0.5,0.3,0.5,0.5,0.5,0.3),#
											bwerm.mu=				c(log(0.002239075)-0.3^2/2, log(0.002239075)-0.2^2/2, log(0.002239075)-0.16^2/2, log(0.002239075)-0.16^2/2,log(0.002239075)-0.3^2/2, log(0.002239075)-0.2^2/2, log(0.002239075)-0.16^2/2, log(0.002239075)-0.16^2/2),#
											bwerm.sigma=			c(0.3, 0.2, 0.16, 0.16,0.3, 0.2, 0.16, 0.16),#
											startseq.mode=			c('many','many','many','many','one','one','one','one'),#
											label=					c('-bh30','-bh20','-bh16','-wh30','-obh30','-obh20','-obh16','-owh30'))
pipeline.args
pipeline.vary
pipeline.vary[5:8,]
pipeline.vary<- pipeline.vary[5:8,]
dummy			<- pipeline.vary[, {				#
						set(pipeline.args, which( pipeline.args$stat=='wher.mu' ), 'v', as.character(wher.mu))#
						set(pipeline.args, which( pipeline.args$stat=='wher.sigma' ), 'v', as.character(wher.sigma))											#
						set(pipeline.args, which( pipeline.args$stat=='bwerm.mu' ), 'v', as.character(bwerm.mu))#
						set(pipeline.args, which( pipeline.args$stat=='bwerm.sigma' ), 'v', as.character(bwerm.sigma))#
						set(pipeline.args, which( pipeline.args$stat=='startseq.mode' ), 'v', as.character(startseq.mode))#
						print(pipeline.args)						#
						if(1)#
						{#
							#	scenario A					#
							infile.ind		<- '150129_HPTN071_scA'#
							infile.trm		<- '150129_HPTN071_scA'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150206-A'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																															#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}					#
						if(1)#
						{#
							#	scenario E					#
							infile.ind		<- '150129_HPTN071_scE'#
							infile.trm		<- '150129_HPTN071_scE'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150206-E'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																									#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}											#
					}, by='label']
dummy			<- pipeline.vary[, {				#
						set(pipeline.args, which( pipeline.args$stat=='wher.mu' ), 'v', as.character(wher.mu))#
						set(pipeline.args, which( pipeline.args$stat=='wher.sigma' ), 'v', as.character(wher.sigma))											#
						set(pipeline.args, which( pipeline.args$stat=='bwerm.mu' ), 'v', as.character(bwerm.mu))#
						set(pipeline.args, which( pipeline.args$stat=='bwerm.sigma' ), 'v', as.character(bwerm.sigma))#
						set(pipeline.args, which( pipeline.args$stat=='startseq.mode' ), 'v', as.character(startseq.mode))#
						print(pipeline.args)						#
						if(1)#
						{#
							#	scenario A					#
							infile.ind		<- '150129_HPTN071_scA'#
							infile.trm		<- '150129_HPTN071_scA'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150206-A'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																															#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}					#
						if(1)#
						{#
							#	scenario E					#
							infile.ind		<- '150129_HPTN071_scE'#
							infile.trm		<- '150129_HPTN071_scE'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150206-E'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																									#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}											#
					}, by='label']
require(phytools)#
	require(hivclust)#
	tree.id.labelsep		<- '|'#
	tree.id.label.idx.ctime	<- 4 #
	indir		<- '/Users/Oliver/duke/2014_Gates/methods_comparison_pipeline/150206'  #
	outdir		<- '/Users/Oliver/duke/2014_Gates/methods_comparison_pipeline/150206'#
	infiles		<- list.files(indir, '.*INTERNAL.R$', full.names=FALSE)
for(i in seq_along(infiles))#
	{#
		infile		<- infiles[i]#
		#	load simulated data#
		file			<- paste(indir, '/', infile, sep='')#
		cat(paste('\nLoading file', file))#
		load(file)		#expect "df.epi"    "df.trms"   "df.inds"   "df.sample" "df.seq"#
		#	load outgroup sequences#
		file			<- system.file(package="rPANGEAHIVsim", "misc",'PANGEA_SSAfg_HXB2outgroup.R')#
		cat(paste('\nLoading outgroup seq from file', file))#
		load(file)		#expect "outgroup.seq.gag" "outgroup.seq.pol" "outgroup.seq.env"#
		tmp				<- tolower(do.call('rbind',strsplit(df.seq[, GAG],'')))#
		rownames(tmp)	<- df.seq[, LABEL]#
		df.seq.gag		<- as.DNAbin(tmp)#
		tmp				<- tolower(do.call('rbind',strsplit(df.seq[, POL],'')))#
		rownames(tmp)	<- df.seq[, LABEL]#
		df.seq.pol		<- as.DNAbin(tmp)	#
		tmp				<- tolower(do.call('rbind',strsplit(df.seq[, ENV],'')))#
		rownames(tmp)	<- df.seq[, LABEL]#
		df.seq.env		<- as.DNAbin(tmp)#
		##
		#	run ExaML on gag#
		##
		seq				<- df.seq.gag#
		seq				<- rbind(seq, outgroup.seq.gag[, seq_len(ncol(seq))])#
		infile.seq.sig	<- "Sun_Sep_14_12:59:06_2013"#
		infile.seq		<- paste(substr(infile,1,nchar(infile)-20),'INFO_simu_gagseq',sep='')#
		file			<- paste( outdir, '/', infile.seq,'_',gsub('/',':',infile.seq.sig),'.R', sep='' )#
		save(seq, file=file)#
		#	run ExaML#
		cmd				<- hivc.cmd.examl.bootstrap.on.one.machine(indir, infile.seq, infile.seq.sig, infile.seq.sig, bs.from=0, bs.to=0, verbose=1)#
		cmd				<- hivc.cmd.hpcwrapper(cmd, hpc.walltime=21, hpc.q= NA, hpc.mem="450mb", hpc.nproc=1)#
		cmd.hpccaller(outdir, paste("exa",paste(strsplit(date(),split=' ')[[1]],collapse='_',sep=''),sep='.'), cmd)#
		Sys.sleep(1)	#
		##
		#	run ExaML on pol#
		##
		seq				<- df.seq.pol#
		seq				<- rbind(seq, outgroup.seq.pol[, seq_len(ncol(seq))])#
		infile.seq.sig	<- "Sun_Sep_14_12:59:06_2013"#
		infile.seq		<- paste(substr(infile,1,nchar(infile)-20),'INFO_simu_polseq',sep='')#
		file			<- paste( outdir, '/', infile.seq,'_',gsub('/',':',infile.seq.sig),'.R', sep='' )#
		save(seq, file=file)#
		#	run ExaML#
		cmd				<- hivc.cmd.examl.bootstrap.on.one.machine(indir, infile.seq, infile.seq.sig, infile.seq.sig, bs.from=0, bs.to=0, verbose=1)#
		cmd				<- hivc.cmd.hpcwrapper(cmd, hpc.walltime=21, hpc.q= NA, hpc.mem="450mb", hpc.nproc=1)#
		cmd.hpccaller(outdir, paste("exa",paste(strsplit(date(),split=' ')[[1]],collapse='_',sep=''),sep='.'), cmd)#
		Sys.sleep(1)			#
		##
		#	run ExaML on env#
		##
		seq				<- df.seq.env#
		seq				<- rbind(seq, outgroup.seq.env[, seq_len(ncol(seq))])#
		infile.seq.sig	<- "Sun_Sep_14_12:59:06_2013"#
		infile.seq		<- paste(substr(infile,1,nchar(infile)-20),'INFO_simu_envseq',sep='')#
		file			<- paste( outdir, '/', infile.seq,'_',gsub('/',':',infile.seq.sig),'.R', sep='' )#
		save(seq, file=file)#
		#	run ExaML#
		cmd				<- hivc.cmd.examl.bootstrap.on.one.machine(indir, infile.seq, infile.seq.sig, infile.seq.sig, bs.from=0, bs.to=0, verbose=1)#
		cmd				<- hivc.cmd.hpcwrapper(cmd, hpc.walltime=21, hpc.q= NA, hpc.mem="450mb", hpc.nproc=1)#
		cmd.hpccaller(outdir, paste("exa",paste(strsplit(date(),split=' ')[[1]],collapse='_',sep=''),sep='.'), cmd)#
		Sys.sleep(1)#
		if(1)#
		{#
			##
			#	run ExaML on concatenated#
			##
			seq				<- cbind(df.seq.gag,df.seq.pol,df.seq.env)#
			tmp				<- cbind(outgroup.seq.gag[,1:ncol(df.seq.gag)], outgroup.seq.pol, outgroup.seq.env)#
			seq				<- rbind(seq,tmp)#
			infile.seq.sig	<- "Sun_Sep_14_12:59:06_2013"#
			infile.seq		<- paste(substr(infile,1,nchar(infile)-20),'INFO_simu_concseq',sep='')#
			file			<- paste( outdir, '/', infile.seq,'_',gsub('/',':',infile.seq.sig),'.R', sep='' )#
			save(seq, file=file)#
			#	run ExaML#
			cmd				<- hivc.cmd.examl.bootstrap.on.one.machine(indir, infile.seq, infile.seq.sig, infile.seq.sig, bs.from=0, bs.to=0, verbose=1)#
			cmd				<- hivc.cmd.hpcwrapper(cmd, hpc.walltime=21, hpc.q= NA, hpc.mem="450mb", hpc.nproc=1)#
			cmd.hpccaller(outdir, paste("exa",paste(strsplit(date(),split=' ')[[1]],collapse='_',sep=''),sep='.'), cmd)#
			Sys.sleep(1)		#
		}		#
	}	#
	##
	#	evaluate R2 for pol#
	##
	gene			<- 'pol'#
	infiles			<- list.files(indir, paste('^ExaML_result.*',gene,'seq.*finaltree.000$',sep=''), full.names=FALSE)#
	for(i in seq_along(infiles))#
	{#
		infile			<- infiles[i]#
		file			<- paste(indir,'/',infile,sep='')#
		ph				<- read.tree(file)#
		tmp				<- regmatches(infile,regexpr('.*_INFO',infile))#
		file			<- paste(indir,'/', substr(tmp, 14, nchar(tmp)-4),"SIMULATED_INTERNAL.R",sep='')#
		#tmp				<- substring(infile, 14)		#
		#tmp				<- list.files(indir, paste(substr(tmp, 1, regexpr('_INFO',tmp) ),'.*INTERNAL.R$', sep=''), full.names=FALSE)#
		#cat(paste('\nLoad file=',tmp))		#
		load(file)#
		tmp				<- which(ph$tip.label=="HXB2")#
		ph				<- reroot(ph, tmp, ph$edge.length[which(ph$edge[,2]==tmp)])#
		ph				<- ladderize(ph)		#
		file			<- paste( outdir, '/', substr(infile,1,nchar(infile)-20),'INFO_simu_ExaML',gene,'.pdf', sep='' )	#
		pdf(file=file, w=10, h=150)#
		plot(ph, show.tip=TRUE, cex=0.5)#
		add.scale.bar()#
		dev.off()	#
		#	get root to tip divergence#
		ph				<- drop.tip(ph,'HXB2')#
		file			<- paste( outdir, '/', substr(infile,1,nchar(infile)-20),'INFO_simu_ExaML',gene,'.newick', sep='' )#
		write.tree(file=file, ph)		#
		tmp				<- node.depth.edgelength(ph)#
		ph.info			<- data.table(LABEL=ph$tip.label, ROOT2TIP=tmp[seq_len(Ntip(ph))] )#
		set(ph.info, NULL, 'IDPOP', ph.info[, sapply(strsplit(LABEL, tree.id.labelsep, fixed=TRUE),'[[',1) ])#
		set(ph.info, NULL, 'IDPOP', ph.info[, as.integer(substr(IDPOP, 7, nchar(IDPOP)))])#
		ph.info			<- merge(ph.info, subset(df.inds, select=c(IDPOP, IDCLU)), by='IDPOP')#
		set(ph.info, NULL, 'IDCLU', ph.info[, factor(IDCLU)])#
		set(ph.info, NULL, 'CALENDAR_TIME', ph.info[, as.numeric(sapply(strsplit(LABEL, tree.id.labelsep, fixed=TRUE),'[[',tree.id.label.idx.ctime))] )#
		tmp				<- lm(ROOT2TIP~CALENDAR_TIME, data=ph.info)		 #
		set( ph.info, NULL, 'ROOT2TIP_LM', predict(tmp, type='response') ) 	#
		tmp2			<- c( R2=round(summary(tmp)$r.squared,d=3), SLOPE= as.numeric(round(coef(tmp)['CALENDAR_TIME'],d=4)), TMRCA=as.numeric(round( -coef(tmp)['(Intercept)']/coef(tmp)['CALENDAR_TIME'], d=1 )) )#
		ggplot(ph.info, aes(x=CALENDAR_TIME, y=ROOT2TIP, colour=IDCLU)) + geom_point(alpha=0.75) + geom_line(alpha=0.1, aes(group=IDCLU)) + geom_line(aes(y=ROOT2TIP_LM)) +#
				#scale_x_continuous(breaks=seq(1980,2020,2)) +						#
				scale_colour_discrete(guide=FALSE) +#
				labs(x='Sequence sampling date', y=paste('root-to-tip divergence\n(HIV-1',gene,'sequences)')) +#
				annotate("text", x=ph.info[, min(CALENDAR_TIME)], y=ph.info[, 0.9*max(ROOT2TIP)], label=paste("R2=", tmp2['R2'],'\nSlope=',tmp2['SLOPE'],'\nTMRCA=',tmp2['TMRCA'], sep=''), hjust = 0, size = 4) +#
				theme(legend.position=c(0,1), legend.justification=c(0,1))		#
		file			<- paste( outdir, '/', substr(infile,1,nchar(infile)-20),'INFO_simu_ExaML',gene,'R2.pdf', sep='' )#
		ggsave(file=file, w=10, h=6)	#
		##
		if(0)#
		{#
			nclu			<- subset(df.inds, !is.na(IDCLU))[, length(unique(IDCLU))]#
			cat(paste('\nNumber of transmission clusters, n=', nclu))		#
			tmp				<- hivc.clu.brdist.stats(ph, eval.dist.btw="leaf", stat.fun=hivc.clu.min.transmission.cascade)#
			#	almost random choice: 0.05 #
			clustering		<- hivc.clu.clusterbythresh(ph, thresh.brl=0.05, dist.brl=tmp, retval="all")#
			tmp				<- data.table( LABEL=ph$tip.label, EXACLUID= clustering$clu.mem[ seq_len(Ntip(ph))] )#
			tmp[, IDPOP:= tmp[, as.integer(substring(sapply(strsplit(LABEL,'|',fixed=TRUE),'[[',1),7))]]#
			ph.inds			<- merge( df.inds, tmp, by='IDPOP' )		#
			tmp				<- subset(ph.inds, !is.na(EXACLUID))[, {#
						tmp				<- extract.clade(ph, hivc.clu.mrca(ph, LABEL)$mrca, root.edge=1)#
						tmp$root.edge	<- 0					#
						list( LABEL=tmp$tip.label, ROOT2TIP=node.depth.edgelength(tmp)[seq_len(Ntip(tmp))] )					#
					}, by='EXACLUID']#
			ph.inds			<- merge(ph.inds, tmp, by=c('EXACLUID','LABEL'), all.x=TRUE)#
			ph.inds			<- merge(ph.inds, subset(ph.inds, !is.na(EXACLUID))[, list(EXACLUID_N=length(IDPOP)), by='EXACLUID'], by='EXACLUID', all.x=TRUE)#
			clx.info		<- subset(ph.inds, EXACLUID_N==max(EXACLUID_N, na.rm=1))#
			ggplot(clx.info, aes(x=TIME_SEQ, y=ROOT2TIP, colour=IDCLU)) + geom_point(alpha=0.75) 	#
		}		#
	}
indir			<- '/Users/Oliver/git/HPTN071sim/source/rPANGEAHIVsim/inst/misc'#
			pipeline.args	<- rPANGEAHIVsim.pipeline.args( yr.start=1985, yr.end=2020, seed=42, s.MODEL='Fixed2Prop', report.prop.recent=1.0,#
					s.PREV.max.n=1600, s.INTERVENTION.prop=0.5, s.INTERVENTION.start=2015, s.INTERVENTION.mul= NA, s.ARCHIVAL.n=50,#
					epi.model='HPTN071', epi.dt=1/48, epi.import=0.05, root.edge.fixed=0,#
					v.N0tau=1, v.r=2.851904, v.T50=-2,#
					wher.mu=log(0.00447743)-0.5^2/2, wher.sigma=0.5, bwerm.mu=log(0.002239075)-0.3^2/2, bwerm.sigma=0.3, er.gamma=4,#
					dbg.GTRparam=0, dbg.rER=0, index.starttime.mode='fix1955', startseq.mode='many', seqtime.mode='AtDiag')								#
			# proposed standard run and control simulation#
			pipeline.vary	<- data.table(	wher.mu=				c(log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.3^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.3^2/2,log(0.002239075)-0.16^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2),#
											wher.sigma=				c(0.5,0.5,0.5,0.3,0.5,0.5,0.5,0.3, 0.16, 0.5, 0.5, 0.5, 0.5),#
											bwerm.mu=				c(log(0.002239075)-0.3^2/2, log(0.002239075)-0.2^2/2, log(0.002239075)-0.16^2/2, log(0.002239075)-0.16^2/2,log(0.002239075)-0.3^2/2, log(0.002239075)-0.2^2/2, log(0.002239075)-0.16^2/2, log(0.002239075)-0.16^2/2, log(0.002239075)-0.16^2/2,log(0.002239075)-0.3^2/2, log(0.002239075)-0.2^2/2,log(0.002239075)-0.3^2/2, log(0.002239075)-0.2^2/2),#
											bwerm.sigma=			c(0.3, 0.2, 0.16, 0.16,0.3, 0.2, 0.16, 0.16, 0.16, 0.3, 0.2, 0.3, 0.2),#
											startseq.mode=			c('many','many','many','many','one','one','one','one','one','one','one','one','one'),#
											index.starttime.mode=	c('fix1955','fix1955','fix1955','fix1955','fix1955','fix1955','fix1955','fix1955','fix1955','fix1965','fix1965','fix1972','fix1972'),#
											label=					c('-bh30','-bh20','-bh16','-wh30','-obh30','-obh20','-obh16','-owh30','-owh16','-obh3065','-obh2065','-obh3072','-obh2072'))
rPANGEAHIVsim.pipeline.args<- function(	yr.start=1980, yr.end=2020, seed=42,#
										s.INC.recent=0.1, s.INC.recent.len=5, s.PREV.min=0.01, s.PREV.max=0.25, s.PREV.base=exp(1), s.INTERVENTION.start=2015, #
										s.INTERVENTION.mul= 2, s.ARCHIVAL.n=50, s.MODEL='Prop2DiagB4I', s.PREV.max.n=NA, s.INTERVENTION.prop=NA,#
										epi.model='HPTN071', epi.dt=1/48, epi.import=0.1, root.edge.fixed=0,#
										v.N0tau=3.58e4, v.r=2, v.T50=-1,#
										wher.mu=0.005, wher.sigma=0.8,#
										bwerm.mu=1.5, bwerm.sigma=0.12, er.gamma=4, #
										sp.prop.of.sexactive= 0.05, #
										report.prop.recent=0.2,#
										dbg.GTRparam=0, dbg.rER=0, #
										index.starttime.mode='normal', startseq.mode='many', seqtime.mode='Gamma9')									#
{#
	#explore within host Neff*tau model#
	if(0)#
	{#
		#visualize dependence of size after 4 years on growth rate#
		r		<- seq(1,16,0.1)#
		plot(r, ( 1+exp(r) ) / ( 1+exp(-3*r) ), type='l')#
		#estimate growth rates for desired sizes	T50=-1#
		f		<- function(r, b){	abs(( 1+exp(r) ) / ( 1+exp(-3*r) )-b)	}		#
		optimize(f=f, interval=c(2, 15), b=3e5 )	#12.61152#
		optimize(f=f, interval=c(2, 15), b=3e4 )	#10.30891#
		optimize(f=f, interval=c(2, 15), b=3e3 )	#8.006034#
		optimize(f=f, interval=c(2, 15), b=3e2 )	#5.70044#
		#estimate growth rates for desired sizes	T50=-2#
		f		<- function(r, b){	abs(( 1+exp(2*r) ) / ( 1+exp(-2*r) )-b)	}		#
		optimize(f=f, interval=c(2, 15), b=3e5 )	#6.305779#
		optimize(f=f, interval=c(2, 15), b=3e4 )	#5.154461#
		optimize(f=f, interval=c(2, 15), b=3e3 )	#4.003191#
		optimize(f=f, interval=c(2, 15), b=3e2 )	#2.851904		#
		f		<- function(r, b){	abs(( 1+exp(2*r) ) / ( 1+exp(-r*(-2+10)) )-b)	}#
		optimize(f=f, interval=c(2, 15), b=3e2 )	#2.850242#
		optimize(f=f, interval=c(2, 15), b=5e4 )	#5.409859#
		optimize(f=f, interval=c(2, 15), b=2e5 )	#6.103021#
		optimize(f=f, interval=c(2, 15), b=150 )	#2.501955#
		optimize(f=f, interval=c(0.1, 15), b=10 )	#1.098685#
		Net			<- function(t, N0tau, r, T50){  N0tau*(1+exp(-r*T50))/(1+exp(-r*(T50-t)))	}		#
		x			<- seq(-10,0,0.001)#
		#tmp			<- data.table(x=x, y5=Net(x, 1, 12.61152, -1), y4=Net(x, 1, 10.30891, -1), y3=Net(x, 1, 8.006034, -1), y2=Net(x, 1, 5.70044, -1))#
		tmp			<- data.table(x=x, y5=Net(x, 1, 6.305779, -2), y4=Net(x, 1, 5.154461, -2), y3=Net(x, 1, 4.003191, -2), y2=Net(x, 1, 2.850242, -2), y1=Net(x, 1, 1.098685, -2))#
		tmp			<- melt(tmp, id.var='x')#
		ggplot(tmp, aes(x=x, y=value, group=variable, colour=variable)) + geom_line() + scale_y_log10(breaks=c(3e2,3e3,3e4,3e5)) + scale_x_continuous(breaks=seq(-20,10,1))#
	}#
	#	plot increasing sampling fraction#
	if(0)#
	{#
		s.PREV.base	<- exp(1)#
		yr.start	<- 1980#
		yr.end		<- 2020#
		s.PREV.min	<- 0.01#
		df.sample	<- as.data.table(expand.grid(YR=seq.int(yr.start, yr.end), s.PREV.max=c(0.11, 0.15, 0.185)))		#
		#	exponential rate of increasing s.TOTAL (total sampling rate) per year#
		set(df.sample, NULL, 'r', df.sample[, log( s.PREV.max/s.PREV.min, base=s.PREV.base ) / diff(range(YR)) ] )#
		set(df.sample, NULL, 's.fraction', df.sample[, s.PREV.base^( r*(YR-min(YR)) ) * s.PREV.min ] )#
		set(df.sample, NULL, 's.PREV.max', df.sample[, factor(s.PREV.max, levels=c('0.11','0.15','0.185'), labels=c('A','B','C'))]) 			#
		ggplot(df.sample, aes(x=YR, y=s.fraction, colour=s.PREV.max)) + geom_line() + scale_y_continuous(breaks=seq(0, 0.16, 0.02)) + labs(colour='scenario', x='year', y='sampling fraction')		#
	}#
	pipeline.args	<- data.table(	stat= 	c('yr.start','yr.end','s.MODEL','s.INC.recent','s.INC.recent.len', 's.PREV.min', 's.PREV.max', 's.PREV.max.n', 's.INTERVENTION.prop', 's.INTERVENTION.start', 's.INTERVENTION.mul', 's.ARCHIVAL.n', 's.seed', 'index.starttime.mode', 'startseq.mode', 'seqtime.mode','root.edge.fixed','epi.model', 'epi.dt', 'epi.import','v.N0tau','v.r','v.T50','wher.mu','wher.sigma','bwerm.mu','bwerm.sigma','er.gamma','sp.prop.of.sexactive','report.prop.recent','dbg.GTRparam','dbg.rER'), #
									v	=	c(yr.start, yr.end, s.MODEL, s.INC.recent, s.INC.recent.len, s.PREV.min, s.PREV.max, s.PREV.max.n, s.INTERVENTION.prop, s.INTERVENTION.start, s.INTERVENTION.mul, s.ARCHIVAL.n, seed, index.starttime.mode, startseq.mode, seqtime.mode, root.edge.fixed, epi.model, epi.dt, epi.import, v.N0tau, v.r, v.T50, wher.mu, wher.sigma, bwerm.mu, bwerm.sigma, er.gamma, sp.prop.of.sexactive, report.prop.recent, dbg.GTRparam, dbg.rER) )#
	setkey(pipeline.args, stat)	#
	pipeline.args#
}
indir			<- '/Users/Oliver/git/HPTN071sim/source/rPANGEAHIVsim/inst/misc'#
			pipeline.args	<- rPANGEAHIVsim.pipeline.args( yr.start=1985, yr.end=2020, seed=42, s.MODEL='Fixed2Prop', report.prop.recent=1.0,#
					s.PREV.max.n=1600, s.INTERVENTION.prop=0.5, s.INTERVENTION.start=2015, s.INTERVENTION.mul= NA, s.ARCHIVAL.n=50,#
					epi.model='HPTN071', epi.dt=1/48, epi.import=0.05, root.edge.fixed=0,#
					v.N0tau=1, v.r=2.851904, v.T50=-2,#
					wher.mu=log(0.00447743)-0.5^2/2, wher.sigma=0.5, bwerm.mu=log(0.002239075)-0.3^2/2, bwerm.sigma=0.3, er.gamma=4,#
					dbg.GTRparam=0, dbg.rER=0, index.starttime.mode='fix1955', startseq.mode='many', seqtime.mode='AtDiag')								#
			# proposed standard run and control simulation#
			pipeline.vary	<- data.table(	wher.mu=				c(log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.3^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.3^2/2,log(0.002239075)-0.16^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2,log(0.00447743)-0.5^2/2),#
											wher.sigma=				c(0.5,0.5,0.5,0.3,0.5,0.5,0.5,0.3, 0.16, 0.5, 0.5, 0.5, 0.5),#
											bwerm.mu=				c(log(0.002239075)-0.3^2/2, log(0.002239075)-0.2^2/2, log(0.002239075)-0.16^2/2, log(0.002239075)-0.16^2/2,log(0.002239075)-0.3^2/2, log(0.002239075)-0.2^2/2, log(0.002239075)-0.16^2/2, log(0.002239075)-0.16^2/2, log(0.002239075)-0.16^2/2,log(0.002239075)-0.3^2/2, log(0.002239075)-0.2^2/2,log(0.002239075)-0.3^2/2, log(0.002239075)-0.2^2/2),#
											bwerm.sigma=			c(0.3, 0.2, 0.16, 0.16,0.3, 0.2, 0.16, 0.16, 0.16, 0.3, 0.2, 0.3, 0.2),#
											startseq.mode=			c('many','many','many','many','one','one','one','one','one','one','one','one','one'),#
											index.starttime.mode=	c('fix1955','fix1955','fix1955','fix1955','fix1955','fix1955','fix1955','fix1955','fix1955','fix1965','fix1965','fix1972','fix1972'),#
											label=					c('-bh30','-bh20','-bh16','-wh30','-obh30','-obh20','-obh16','-owh30','-owh16','-obh3065','-obh2065','-obh3072','-obh2072'))
pipeline.vary
pipeline.vary<- pipeline.vary[9:13,]
pipeline.vary
dummy			<- pipeline.vary[, {				#
						set(pipeline.args, which( pipeline.args$stat=='wher.mu' ), 'v', as.character(wher.mu))#
						set(pipeline.args, which( pipeline.args$stat=='wher.sigma' ), 'v', as.character(wher.sigma))											#
						set(pipeline.args, which( pipeline.args$stat=='bwerm.mu' ), 'v', as.character(bwerm.mu))#
						set(pipeline.args, which( pipeline.args$stat=='bwerm.sigma' ), 'v', as.character(bwerm.sigma))#
						set(pipeline.args, which( pipeline.args$stat=='startseq.mode' ), 'v', as.character(startseq.mode))#
						print(pipeline.args)						#
						if(1)#
						{#
							#	scenario A					#
							infile.ind		<- '150129_HPTN071_scA'#
							infile.trm		<- '150129_HPTN071_scA'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150206-A'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																															#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}					#
						if(1)#
						{#
							#	scenario E					#
							infile.ind		<- '150129_HPTN071_scE'#
							infile.trm		<- '150129_HPTN071_scE'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150206-E'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																									#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}											#
					}, by='label']
pipeline.vary
dummy			<- pipeline.vary[, {				#
						set(pipeline.args, which( pipeline.args$stat=='wher.mu' ), 'v', as.character(wher.mu))#
						set(pipeline.args, which( pipeline.args$stat=='wher.sigma' ), 'v', as.character(wher.sigma))											#
						set(pipeline.args, which( pipeline.args$stat=='bwerm.mu' ), 'v', as.character(bwerm.mu))#
						set(pipeline.args, which( pipeline.args$stat=='bwerm.sigma' ), 'v', as.character(bwerm.sigma))#
						set(pipeline.args, which( pipeline.args$stat=='startseq.mode' ), 'v', as.character(startseq.mode))#
						set(pipeline.args, which( pipeline.args$stat=='index.starttime.mode' ), 'v', as.character(index.starttime.mode))#
						print(pipeline.args)						#
						if(1)#
						{#
							#	scenario A					#
							infile.ind		<- '150129_HPTN071_scA'#
							infile.trm		<- '150129_HPTN071_scA'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150206-A'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																															#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}					#
						if(1)#
						{#
							#	scenario E					#
							infile.ind		<- '150129_HPTN071_scE'#
							infile.trm		<- '150129_HPTN071_scE'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150206-E'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																									#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}											#
					}, by='label']
require(phytools)#
	require(hivclust)#
	tree.id.labelsep		<- '|'#
	tree.id.label.idx.ctime	<- 4 #
	indir		<- '/Users/Oliver/duke/2014_Gates/methods_comparison_pipeline/150206b'  #
	outdir		<- '/Users/Oliver/duke/2014_Gates/methods_comparison_pipeline/150206b'#
	infiles		<- list.files(indir, '.*INTERNAL.R$', full.names=FALSE)
gene			<- 'pol'#
	infiles			<- list.files(indir, paste('^ExaML_result.*',gene,'seq.*finaltree.000$',sep=''), full.names=FALSE)#
	for(i in seq_along(infiles))#
	{#
		infile			<- infiles[i]#
		file			<- paste(indir,'/',infile,sep='')#
		ph				<- read.tree(file)#
		tmp				<- regmatches(infile,regexpr('.*_INFO',infile))#
		file			<- paste(indir,'/', substr(tmp, 14, nchar(tmp)-4),"SIMULATED_INTERNAL.R",sep='')#
		#tmp				<- substring(infile, 14)		#
		#tmp				<- list.files(indir, paste(substr(tmp, 1, regexpr('_INFO',tmp) ),'.*INTERNAL.R$', sep=''), full.names=FALSE)#
		#cat(paste('\nLoad file=',tmp))		#
		load(file)#
		tmp				<- which(ph$tip.label=="HXB2")#
		ph				<- reroot(ph, tmp, ph$edge.length[which(ph$edge[,2]==tmp)])#
		ph				<- ladderize(ph)		#
		file			<- paste( outdir, '/', substr(infile,1,nchar(infile)-20),'INFO_simu_ExaML',gene,'.pdf', sep='' )	#
		pdf(file=file, w=10, h=150)#
		plot(ph, show.tip=TRUE, cex=0.5)#
		add.scale.bar()#
		dev.off()	#
		#	get root to tip divergence#
		ph				<- drop.tip(ph,'HXB2')#
		file			<- paste( outdir, '/', substr(infile,1,nchar(infile)-20),'INFO_simu_ExaML',gene,'.newick', sep='' )#
		write.tree(file=file, ph)		#
		tmp				<- node.depth.edgelength(ph)#
		ph.info			<- data.table(LABEL=ph$tip.label, ROOT2TIP=tmp[seq_len(Ntip(ph))] )#
		set(ph.info, NULL, 'IDPOP', ph.info[, sapply(strsplit(LABEL, tree.id.labelsep, fixed=TRUE),'[[',1) ])#
		set(ph.info, NULL, 'IDPOP', ph.info[, as.integer(substr(IDPOP, 7, nchar(IDPOP)))])#
		ph.info			<- merge(ph.info, subset(df.inds, select=c(IDPOP, IDCLU)), by='IDPOP')#
		set(ph.info, NULL, 'IDCLU', ph.info[, factor(IDCLU)])#
		set(ph.info, NULL, 'CALENDAR_TIME', ph.info[, as.numeric(sapply(strsplit(LABEL, tree.id.labelsep, fixed=TRUE),'[[',tree.id.label.idx.ctime))] )#
		tmp				<- lm(ROOT2TIP~CALENDAR_TIME, data=ph.info)		 #
		set( ph.info, NULL, 'ROOT2TIP_LM', predict(tmp, type='response') ) 	#
		tmp2			<- c( R2=round(summary(tmp)$r.squared,d=3), SLOPE= as.numeric(round(coef(tmp)['CALENDAR_TIME'],d=4)), TMRCA=as.numeric(round( -coef(tmp)['(Intercept)']/coef(tmp)['CALENDAR_TIME'], d=1 )) )#
		ggplot(ph.info, aes(x=CALENDAR_TIME, y=ROOT2TIP, colour=IDCLU)) + geom_point(alpha=0.75) + geom_line(alpha=0.1, aes(group=IDCLU)) + geom_line(aes(y=ROOT2TIP_LM)) +#
				#scale_x_continuous(breaks=seq(1980,2020,2)) +						#
				scale_colour_discrete(guide=FALSE) +#
				labs(x='Sequence sampling date', y=paste('root-to-tip divergence\n(HIV-1',gene,'sequences)')) +#
				annotate("text", x=ph.info[, min(CALENDAR_TIME)], y=ph.info[, 0.9*max(ROOT2TIP)], label=paste("R2=", tmp2['R2'],'\nSlope=',tmp2['SLOPE'],'\nTMRCA=',tmp2['TMRCA'], sep=''), hjust = 0, size = 4) +#
				theme(legend.position=c(0,1), legend.justification=c(0,1))		#
		file			<- paste( outdir, '/', substr(infile,1,nchar(infile)-20),'INFO_simu_ExaML',gene,'R2.pdf', sep='' )#
		ggsave(file=file, w=10, h=6)	#
		##
		if(0)#
		{#
			nclu			<- subset(df.inds, !is.na(IDCLU))[, length(unique(IDCLU))]#
			cat(paste('\nNumber of transmission clusters, n=', nclu))		#
			tmp				<- hivc.clu.brdist.stats(ph, eval.dist.btw="leaf", stat.fun=hivc.clu.min.transmission.cascade)#
			#	almost random choice: 0.05 #
			clustering		<- hivc.clu.clusterbythresh(ph, thresh.brl=0.05, dist.brl=tmp, retval="all")#
			tmp				<- data.table( LABEL=ph$tip.label, EXACLUID= clustering$clu.mem[ seq_len(Ntip(ph))] )#
			tmp[, IDPOP:= tmp[, as.integer(substring(sapply(strsplit(LABEL,'|',fixed=TRUE),'[[',1),7))]]#
			ph.inds			<- merge( df.inds, tmp, by='IDPOP' )		#
			tmp				<- subset(ph.inds, !is.na(EXACLUID))[, {#
						tmp				<- extract.clade(ph, hivc.clu.mrca(ph, LABEL)$mrca, root.edge=1)#
						tmp$root.edge	<- 0					#
						list( LABEL=tmp$tip.label, ROOT2TIP=node.depth.edgelength(tmp)[seq_len(Ntip(tmp))] )					#
					}, by='EXACLUID']#
			ph.inds			<- merge(ph.inds, tmp, by=c('EXACLUID','LABEL'), all.x=TRUE)#
			ph.inds			<- merge(ph.inds, subset(ph.inds, !is.na(EXACLUID))[, list(EXACLUID_N=length(IDPOP)), by='EXACLUID'], by='EXACLUID', all.x=TRUE)#
			clx.info		<- subset(ph.inds, EXACLUID_N==max(EXACLUID_N, na.rm=1))#
			ggplot(clx.info, aes(x=TIME_SEQ, y=ROOT2TIP, colour=IDCLU)) + geom_point(alpha=0.75) 	#
		}		#
	}
file	<- "/Users/Oliver/git/HPTN071sim/tmp150204-C-mFP50/150129_HPTN071_scC-mFP50_INTERNAL/150129_HPTN071_scC-mFP50_SIMULATED_INTERNAL.R"
z<- load(file)
z
file	<- "/Users/Oliver/git/HPTN071sim/tmp150204-C-mFP50/150129_HPTN071_scC-mFP50_INTERNAL/150129_HPTN071_scC-mFP50_SIMULATED_INTERNAL.R"#
	load(file)#
	df.epi2		<- copy(df.epi)    #
	df.trms2	<- copy(df.trms)#
	df.inds2	<- copy(df.inds)   #
	df.sample2	<- copy(df.sample)#
	df.seq2		<- copy(df.seq)#
	df.sp2		<- copy(df.sp)
file		<-  "/Users/Oliver/git/HPTN071sim/tmp150204-C-mFP50_save/150129_HPTN071_scC-mFP50_INTERNAL/150129_HPTN071_scC-mFP50_SIMULATED_INTERNAL.R"#
	load(file)
df.epi
all(df.epi[, PREV]==df.epi2[, PREV])
all(df.epi[, IMPORT]==df.epi2[, IMPORT])
df.sample2
all(df.sample[, s.nTOTAL]==df.sample2[, s.nTOTAL])
df.inds
subset(df.inds, !is.na(TIME_SEQ))
all(subset(df.inds, !is.na(TIME_SEQ))[, TIME_SEQ]==subset(df.inds2, !is.na(TIME_SEQ))[, TIME_SEQ])
all(subset(df.inds, !is.na(TIME_SEQ))[, IDCLU]==subset(df.inds2, !is.na(TIME_SEQ))[, IDCLU])
df.sp2
all(df.sp[, ALIVE_N]==df.sp2[, ALIVE_N])
all(df.sp[, ALIVE_AND_SEQ_N]==df.sp2[, ALIVE_AND_SEQ_N])
df.seq2
names(df.seq2)
all(df.seq[, IDPOP]==df.seq2[, IDPOP])
all(df.seq[, GAG]==df.seq2[, GAG])#
	all(df.seq[, POL]==df.seq2[, POL])#
	all(df.seq[, ENV]==df.seq2[, ENV])
df.seq[1, GAG]==df.seq2[1, GAG]
df.seq[1, GAG]
df.seq2[1, GAG]
which(strsplit(df.seq[1, GAG],'')!=strsplit(df.seq2[1, GAG],''))
which(strsplit(df.seq[1, GAG],'')[[1]]!=strsplit(df.seq2[1, GAG],'')[[1]])
load("/Users/Oliver/git/HPTN071sim/tmp150204-C-mFP50/SeqGen/150129_HPTN071_scC-mFP50_seqgen.R")
z<-load("/Users/Oliver/git/HPTN071sim/tmp150204-C-mFP50/SeqGen/150129_HPTN071_scC-mFP50_seqgen.R")
z
df.seqgen
names(df.seqgen)
load("/Users/Oliver/git/HPTN071sim/tmp150204-C-mFP50/SeqGen/150129_HPTN071_scC-mFP50_seqgen.R")#
	df.seqgen2	<- copy(df.seqgen)#
	load("/Users/Oliver/git/HPTN071sim/tmp150204-C-mFP50_save/SeqGen/150129_HPTN071_scC-mFP50_seqgen.R")
all(df.seqgen[, NEWICK]==df.seqgen2[, NEWICK])
df.seqgen[1, NEWICK]==df.seqgen2[1, NEWICK]
df.seqgen[1, NEWICK]
df.seqgen2[1, NEWICK]
which(strsplit(df.seqgen[1, NEWICK],'')[[1]]!=strsplit(df.seqgen2[1, NEWICK],'')[[1]])
indir			<- '/Users/Oliver/git/HPTN071sim/source/rPANGEAHIVsim/inst/misc'#
			pipeline.args	<- rPANGEAHIVsim.pipeline.args( yr.start=1985, yr.end=2020, seed=42, s.MODEL='Prop2DiagB4I', report.prop.recent=1.0,#
					s.PREV.max=NA, s.INTERVENTION.prop=NA, s.INTERVENTION.start=2015, s.INTERVENTION.mul= NA, s.ARCHIVAL.n=50,#
					epi.model='HPTN071', epi.dt=1/48, epi.import=0.05,#
					v.N0tau=1, v.r=2.851904, v.T50=-2,#
					wher.mu=log(0.00447743)-0.5^2/2, wher.sigma=0.5, bwerm.mu=log(0.002239075)-0.3^2/2, bwerm.sigma=0.3, er.gamma=4,#
					dbg.GTRparam=0, dbg.rER=0, index.starttime.mode='fix1955', startseq.mode='many', seqtime.mode='AtDiag')								#
			# proposed standard run and control simulation#
			pipeline.vary	<- data.table(	seqtime.mode=	c('AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag','AtDiag'),	#
					s.MODEL=				c('Prop2DiagB4I','Prop2DiagB4I','Prop2Untreated','Fixed2Prop','Fixed2Prop','Fixed2Prop','Fixed2Prop','Fixed2Prop','Fixed2Prop'),													#
					startseq.mode=			c('many','many','many','many','many','many','many','many','many'),#
					s.multi=				c(1,2,1,1,1,1,2,1,1),#
					yr.end=					c(2020,2020,2020,2020,2020,2020,2020,2020,2018),#
					epi.import=				c(0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.2,0.05),#
					s.PREV.max.n=			c(1600,1600,1600,1600,1600,1600,1600,1600,1280),#
					s.INTERVENTION.prop=	c(NA,NA,NA,0.85,0.5,0.25,0.5,0.5,0.375),#
					s.INTERVENTION.mul=		c(1,1,1,NA,NA,NA,NA,NA,NA),#
					label=					c('-mDI','-mDIs2x','-mPU','-mFP85','-mFP50','-mFP25','-mFP50s2x','-mFP50c20','-mFP50e18'))
pipeline.vary
pipeline.vary<- pipeline.vary[5,]
pipeline.vary
dummy			<- pipeline.vary[, {				#
						set(pipeline.args, which( pipeline.args$stat=='seqtime.mode' ), 'v', as.character(seqtime.mode))#
						set(pipeline.args, which( pipeline.args$stat=='s.MODEL' ), 'v', as.character(s.MODEL))											#
						set(pipeline.args, which( pipeline.args$stat=='startseq.mode' ), 'v', as.character(startseq.mode))#
						set(pipeline.args, which( pipeline.args$stat=='s.INTERVENTION.mul' ), 'v', as.character(s.INTERVENTION.mul))#
						set(pipeline.args, which( pipeline.args$stat=='s.INTERVENTION.prop' ), 'v', as.character(s.INTERVENTION.prop))#
						set(pipeline.args, which( pipeline.args$stat=='epi.import' ), 'v', as.character(epi.import))#
						print(pipeline.args)						#
						if(1)#
						{#
							#	scenario A					#
							infile.ind		<- '150129_HPTN071_scA'#
							infile.trm		<- '150129_HPTN071_scA'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-A'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																								#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario B					#
							infile.ind		<- '150129_HPTN071_scB'#
							infile.trm		<- '150129_HPTN071_scB'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-B'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario C					#
							infile.ind		<- '150129_HPTN071_scC'#
							infile.trm		<- '150129_HPTN071_scC'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-C'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario D					#
							infile.ind		<- '150129_HPTN071_scD'#
							infile.trm		<- '150129_HPTN071_scD'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-D'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario E					#
							infile.ind		<- '150129_HPTN071_scE'#
							infile.trm		<- '150129_HPTN071_scE'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-E'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																		#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}#
						if(1)#
						{#
							#	scenario F					#
							infile.ind		<- '150129_HPTN071_scF'#
							infile.trm		<- '150129_HPTN071_scF'#
							tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150204-F'#
							tmpdir			<- paste(tmpdir,label,sep='')#
							dir.create(tmpdir, showWarnings=FALSE)																									#
							set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.multi*s.PREV.max.n))#
							file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
							file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
							file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
							#system(file)													#
						}					#
					}, by='label']
load("/Users/Oliver/git/HPTN071sim/tmp150204-C-mFP50/SeqGen/150129_HPTN071_scC-mFP50_seqgen.R")#
	df.seqgen2	<- copy(df.seqgen)#
	load("/Users/Oliver/git/HPTN071sim/tmp150204-C-mFP50_save/SeqGen/150129_HPTN071_scC-mFP50_seqgen.R")
all(df.seqgen[, NEWICK]==df.seqgen2[, NEWICK])
names(df.seqgen)
all(df.seqgen[, ANCSEQ]==df.seqgen2[, ANCSEQ])
file		<- "/Users/Oliver/git/HPTN071sim/tmp150204-C-mFP50/150129_HPTN071_scC-mFP50_INTERNAL/150129_HPTN071_scC-mFP50_SIMULATED_INTERNAL.R"#
	load(file)#
	df.epi2		<- copy(df.epi)    #
	df.trms2	<- copy(df.trms)#
	df.inds2	<- copy(df.inds)   #
	df.sample2	<- copy(df.sample)#
	df.seq2		<- copy(df.seq)#
	df.sp2		<- copy(df.sp)	#
	file		<-  "/Users/Oliver/git/HPTN071sim/tmp150204-C-mFP50_save/150129_HPTN071_scC-mFP50_INTERNAL/150129_HPTN071_scC-mFP50_SIMULATED_INTERNAL.R"#
	load(file)
all(df.epi[, PREV]==df.epi2[, PREV])#
	all(df.epi[, IMPORT]==df.epi2[, IMPORT])#
	all(df.sample[, s.nTOTAL]==df.sample2[, s.nTOTAL])#
	all(subset(df.inds, !is.na(TIME_SEQ))[, TIME_SEQ]==subset(df.inds2, !is.na(TIME_SEQ))[, TIME_SEQ])#
	all(subset(df.inds, !is.na(TIME_SEQ))[, IDCLU]==subset(df.inds2, !is.na(TIME_SEQ))[, IDCLU])	#
	all(df.sp[, ALIVE_N]==df.sp2[, ALIVE_N])#
	all(df.sp[, ALIVE_AND_SEQ_N]==df.sp2[, ALIVE_AND_SEQ_N])#
	all(df.seq[, IDPOP]==df.seq2[, IDPOP])
all(df.seq[, GAG]==df.seq2[, GAG])
all(df.seq[, POL]==df.seq2[, POL])#
	all(df.seq[, ENV]==df.seq2[, ENV])
indir			<- '/Users/Oliver/git/HPTN071sim/source/rPANGEAHIVsim/inst/misc'#
		pipeline.args	<- rPANGEAHIVsim.pipeline.args( yr.start=1985, yr.end=NA, seed=NA, s.MODEL='Fixed2Prop', report.prop.recent=1.0,#
				s.PREV.max.n=NA, s.INTERVENTION.prop=NA, s.INTERVENTION.start=2015, s.INTERVENTION.mul= NA, s.ARCHIVAL.n=50,#
				epi.model='HPTN071', epi.dt=1/48, epi.import=NA, root.edge.fixed=0,#
				v.N0tau=1, v.r=2.851904, v.T50=-2,#
				wher.mu=log(0.00447743)-0.5^2/2, wher.sigma=0.5, bwerm.mu=log(0.002239075)-0.3^2/2, bwerm.sigma=0.3, er.gamma=4,#
				dbg.GTRparam=0, dbg.rER=0, index.starttime.mode='fix1970', startseq.mode='one', seqtime.mode='AtDiag')
pipeline.args
pipeline.vary	<- data.table(	label=					c('-sq','-ph','-tr20','-s2x','-mFP85','-y3'),										#
										yr.end=					c(2020, 2020,  2020,  2020,   2020,    2018),#
										epi.import=				c(0.05, 0.05,  0.2,   0.05,   0.05,    0.05),#
										s.PREV.max.n=			c(1600, 3600,  1600,  1600,   1600,    1280),#
										s.INTERVENTION.prop=	c(0.5,  0.5,   0.5,   0.5,    0.85,    0.375),#
										seed=                   c(42,   5,     7,     11,     13,      17)#
										)
pipeline.vary
pipeline.vary	<- data.table(	label=					c('-sq','-ph','-tr20','-s2x','-mFP85','-y3'),										#
										yr.end=					c(2020, 2020,  2020,  2020,   2020,    2018),#
										epi.import=				c(0.05, 0.05,  0.2,   0.05,   0.05,    0.05),#
										s.PREV.max.n=			c(1600, 1600,  1600,  3200,   1600,    1280),#
										s.INTERVENTION.prop=	c(0.5,  0.5,   0.5,   0.5,    0.85,    0.375),#
										seed=                   c(42,   5,     7,     11,     13,      17)#
										)
pipeline.vary
dummy			<- pipeline.vary[, {				#
					set(pipeline.args, which( pipeline.args$stat=='yr.end' ), 'v', as.character(yr.end))#
					set(pipeline.args, which( pipeline.args$stat=='epi.import' ), 'v', as.character(epi.import))#
					set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.PREV.max.n))											#
					set(pipeline.args, which( pipeline.args$stat=='s.INTERVENTION.prop' ), 'v', as.character(s.INTERVENTION.prop))#
					set(pipeline.args, which( pipeline.args$stat=='seed' ), 'v', as.character(seed))#
					print(pipeline.args)						#
					if(1)#
					{#
						#	scenario A					#
						infile.ind		<- '150129_HPTN071_scA'#
						infile.trm		<- '150129_HPTN071_scA'#
						tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150208-A'#
						tmpdir			<- paste(tmpdir,label,sep='')#
						dir.create(tmpdir, showWarnings=FALSE)																														#
						file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
						file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
						file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
						#system(file)													#
					}#
					if(1)#
					{#
						#	scenario B					#
						infile.ind		<- '150129_HPTN071_scB'#
						infile.trm		<- '150129_HPTN071_scB'#
						tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150208-B'#
						tmpdir			<- paste(tmpdir,label,sep='')#
						dir.create(tmpdir, showWarnings=FALSE)																		#
						file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
						file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
						file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
						#system(file)													#
					}#
					if(1)#
					{#
						#	scenario C					#
						infile.ind		<- '150129_HPTN071_scC'#
						infile.trm		<- '150129_HPTN071_scC'#
						tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150208-C'#
						tmpdir			<- paste(tmpdir,label,sep='')#
						dir.create(tmpdir, showWarnings=FALSE)																		#
						file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
						file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
						file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
						#system(file)													#
					}#
					if(1)#
					{#
						#	scenario D					#
						infile.ind		<- '150129_HPTN071_scD'#
						infile.trm		<- '150129_HPTN071_scD'#
						tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150208-D'#
						tmpdir			<- paste(tmpdir,label,sep='')#
						dir.create(tmpdir, showWarnings=FALSE)																		#
						file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
						file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
						file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
						#system(file)													#
					}#
					if(1)#
					{#
						#	scenario E					#
						infile.ind		<- '150129_HPTN071_scE'#
						infile.trm		<- '150129_HPTN071_scE'#
						tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150208-E'#
						tmpdir			<- paste(tmpdir,label,sep='')#
						dir.create(tmpdir, showWarnings=FALSE)																		#
						file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
						file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
						file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
						#system(file)													#
					}#
					if(1)#
					{#
						#	scenario F					#
						infile.ind		<- '150129_HPTN071_scF'#
						infile.trm		<- '150129_HPTN071_scF'#
						tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150208-F'#
						tmpdir			<- paste(tmpdir,label,sep='')#
						dir.create(tmpdir, showWarnings=FALSE)																									#
						file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
						file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
						file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
						#system(file)													#
					}					#
				}, by='label']
z<- load('~/git/HPTN071sim/tmp150208-A-mFP85/150129_HPTN071_scA-mFP85_PipeArgs.R')
z
pipeline.args
dummy			<- pipeline.vary[, {				#
					set(pipeline.args, which( pipeline.args$stat=='yr.end' ), 'v', as.character(yr.end))#
					set(pipeline.args, which( pipeline.args$stat=='epi.import' ), 'v', as.character(epi.import))#
					set(pipeline.args, which( pipeline.args$stat=='s.PREV.max.n' ), 'v', as.character(s.PREV.max.n))											#
					set(pipeline.args, which( pipeline.args$stat=='s.INTERVENTION.prop' ), 'v', as.character(s.INTERVENTION.prop))#
					set(pipeline.args, which( pipeline.args$stat=='s.seed' ), 'v', as.character(seed))#
					print(pipeline.args)						#
					if(1)#
					{#
						#	scenario A					#
						infile.ind		<- '150129_HPTN071_scA'#
						infile.trm		<- '150129_HPTN071_scA'#
						tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150208-A'#
						tmpdir			<- paste(tmpdir,label,sep='')#
						dir.create(tmpdir, showWarnings=FALSE)																														#
						file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
						file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
						file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
						#system(file)													#
					}#
					if(1)#
					{#
						#	scenario B					#
						infile.ind		<- '150129_HPTN071_scB'#
						infile.trm		<- '150129_HPTN071_scB'#
						tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150208-B'#
						tmpdir			<- paste(tmpdir,label,sep='')#
						dir.create(tmpdir, showWarnings=FALSE)																		#
						file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
						file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
						file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
						#system(file)													#
					}#
					if(1)#
					{#
						#	scenario C					#
						infile.ind		<- '150129_HPTN071_scC'#
						infile.trm		<- '150129_HPTN071_scC'#
						tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150208-C'#
						tmpdir			<- paste(tmpdir,label,sep='')#
						dir.create(tmpdir, showWarnings=FALSE)																		#
						file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
						file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
						file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
						#system(file)													#
					}#
					if(1)#
					{#
						#	scenario D					#
						infile.ind		<- '150129_HPTN071_scD'#
						infile.trm		<- '150129_HPTN071_scD'#
						tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150208-D'#
						tmpdir			<- paste(tmpdir,label,sep='')#
						dir.create(tmpdir, showWarnings=FALSE)																		#
						file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
						file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
						file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
						#system(file)													#
					}#
					if(1)#
					{#
						#	scenario E					#
						infile.ind		<- '150129_HPTN071_scE'#
						infile.trm		<- '150129_HPTN071_scE'#
						tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150208-E'#
						tmpdir			<- paste(tmpdir,label,sep='')#
						dir.create(tmpdir, showWarnings=FALSE)																		#
						file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
						file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
						file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
						#system(file)													#
					}#
					if(1)#
					{#
						#	scenario F					#
						infile.ind		<- '150129_HPTN071_scF'#
						infile.trm		<- '150129_HPTN071_scF'#
						tmpdir			<- '/Users/Oliver/git/HPTN071sim/tmp150208-F'#
						tmpdir			<- paste(tmpdir,label,sep='')#
						dir.create(tmpdir, showWarnings=FALSE)																									#
						file.copy(paste(indir,'/',infile.ind,'_IND.csv',sep=''), paste(tmpdir,'/',infile.ind,label,'_IND.csv',sep=''))#
						file.copy(paste(indir,'/',infile.trm,'_TRM.csv',sep=''), paste(tmpdir,'/',infile.trm,label,'_TRM.csv',sep=''))#
						file			<- rPANGEAHIVsim.pipeline(tmpdir, paste(infile.ind,label,'_IND.csv',sep=''), paste(infile.trm,label,'_TRM.csv',sep=''), tmpdir, pipeline.args=pipeline.args)#
						#system(file)													#
					}					#
				}, by='label']
verbose			<- 1#
	with.plot		<- 1#
	label.sep		<- '|'	#
	##
	#	read I/O#
	##
	indir.epi		<- '/Users/Oliver/git/HPTN071sim/tmp140914/TrChains'#
	infile.epi		<- '140716_RUN001_SAVE.R'	#
	indir.vts		<- '/Users/Oliver/git/HPTN071sim/tmp140914/VirusTreeSimulator'#
	infile.prefix	<- '140716_RUN001_'	#
	infile.args		<- '/Users/Oliver/git/HPTN071sim/tmp140914/140716_RUN001_PipeArgs.R'#
	outdir.sg		<- '/Users/Oliver/git/HPTN071sim/tmp140914/SeqGen'
indir.epi="/Users/Oliver/git/HPTN071sim/tmp150204-F-mFP50c20/TrChains" #
infile.epi="150129_HPTN071_scF-mFP50c20_SAVE.R" #
indir.vts="/Users/Oliver/git/HPTN071sim/tmp150204-F-mFP50c20/VirusTreeSimulator" #
infile.prefix="150129_HPTN071_scF-mFP50c20_" #
infile.args="/Users/Oliver/git/HPTN071sim/tmp150204-F-mFP50c20/150129_HPTN071_scF-mFP50c20_PipeArgs.R" #
outdir.sg="/Users/Oliver/git/HPTN071sim/tmp150204-F-mFP50c20/SeqGen"
if(verbose)#
	{#
		cat('\ninput args\n',paste(indir.epi, infile.epi, indir.vts, infile.prefix, outdir.sg, sep='\n'))#
	}	#
	if(!is.na(infile.args))#
	{#
		load(infile.args)	#expect 'pipeline.args'#
	}#
	if(is.null(pipeline.args))#
	{#
		cat('\nCould not find pipeline.args, generating default')#
		pipeline.args	<- rPANGEAHIVsim.pipeline.args()#
	}	#
	stopifnot( all( c('s.seed','wher.mu','wher.sigma','bwerm.mu','bwerm.sigma')%in%pipeline.args[, stat] ) )#
	##
	set.seed( pipeline.args['s.seed',][, as.numeric(v)] )
file				<- paste(indir.epi, '/', infile.epi, sep='')#
	load(file)	#expect "df.epi"    "df.trms"   "df.inds"   "df.sample"#
	##
	cat(paste('\ncreate sampler of evolutionary rates'))#
	#	create sampler of within host evolutionary rates#
	rER.pol				<- PANGEA.WithinHostEvolutionaryRate.create.sampler.v1(wher.mu=pipeline.args['wher.mu',][, as.numeric(v)], wher.sigma=pipeline.args['wher.sigma',][, as.numeric(v)])#
	#	create sampler of between host evolutionary rate dampener#
	tmp					<- PANGEA.TransmissionEdgeEvolutionaryRate.create.sampler(er.meanlog=pipeline.args['bwerm.mu',][, as.numeric(v)], er.sdlog=pipeline.args['bwerm.sigma',][, as.numeric(v)])#
	rERbw				<- tmp$rERbw#
	rERbw.args			<- tmp$rERbw.args#
	#	create sampler of ancestral sequences#
	cat(paste('\ncreate sampler of ancestral sequences'))#
	tmp					<- subset( df.inds, !is.na(TIME_SEQ) )[, length(unique(IDCLU))]#
	cat(paste('\nnumber of clusters for which a sequence is required, n=', tmp))#
	tmp					<- ifelse(tmp<400, 0.5, ifelse(tmp<500, 1, 2))	#
	cat(paste('\nUsing root.ctime.grace=', tmp))#
	tmp					<- PANGEA.RootSeq.create.sampler(root.ctime.grace= tmp, sample.grace= 3 )	#
	rANCSEQ				<- tmp$rANCSEQ#
	rANCSEQ.args		<- tmp$rANCSEQ.args
rANCSEQ(c(1970), rANCSEQ.args)
ancseq			<- rANCSEQ(c(1970), rANCSEQ.args)
data.table(ANCSEQ= apply(as.character(ancseq),1,function(x) paste(x, collapse='')) )
tmp				<- rANCSEQ(1970, rANCSEQ.args)
tmp
tmp				<- data.table(ANCSEQ= apply(as.character(tmp),1,function(x) paste(x, collapse='')) )
ancseq			<- data.table(ANCSEQ=rep(NA_character_, nrow(df.ph)))
verbose			<- 1#
	with.plot		<- 1#
	label.sep		<- '|'	#
	##
	#	read I/O#
	##
	indir.epi		<- '/Users/Oliver/git/HPTN071sim/tmp140914/TrChains'#
	infile.epi		<- '140716_RUN001_SAVE.R'	#
	indir.vts		<- '/Users/Oliver/git/HPTN071sim/tmp140914/VirusTreeSimulator'#
	infile.prefix	<- '140716_RUN001_'	#
	infile.args		<- '/Users/Oliver/git/HPTN071sim/tmp140914/140716_RUN001_PipeArgs.R'#
	outdir.sg		<- '/Users/Oliver/git/HPTN071sim/tmp140914/SeqGen'
indir.epi="/Users/Oliver/git/HPTN071sim/tmp150208-D-ph/TrChains" #
infile.epi="150129_HPTN071_scD-ph_SAVE.R" #
indir.vts="/Users/Oliver/git/HPTN071sim/tmp150208-D-ph/VirusTreeSimulator" #
infile.prefix="150129_HPTN071_scD-ph_" #
infile.args="/Users/Oliver/git/HPTN071sim/tmp150208-D-ph/150129_HPTN071_scD-ph_PipeArgs.R" #
outdir.sg="/Users/Oliver/git/HPTN071sim/tmp150208-D-ph/SeqGen"
if(verbose)#
	{#
		cat('\ninput args\n',paste(indir.epi, infile.epi, indir.vts, infile.prefix, outdir.sg, sep='\n'))#
	}	#
	if(!is.na(infile.args))#
	{#
		load(infile.args)	#expect 'pipeline.args'#
	}#
	if(is.null(pipeline.args))#
	{#
		cat('\nCould not find pipeline.args, generating default')#
		pipeline.args	<- rPANGEAHIVsim.pipeline.args()#
	}	#
	stopifnot( all( c('s.seed','wher.mu','wher.sigma','bwerm.mu','bwerm.sigma')%in%pipeline.args[, stat] ) )#
	##
	set.seed( pipeline.args['s.seed',][, as.numeric(v)] )	#
	##
	#	setup samplers#
	##
	file				<- paste(indir.epi, '/', infile.epi, sep='')#
	load(file)	#expect "df.epi"    "df.trms"   "df.inds"   "df.sample"#
	##
	cat(paste('\ncreate sampler of evolutionary rates'))#
	#	create sampler of within host evolutionary rates#
	rER.pol				<- PANGEA.WithinHostEvolutionaryRate.create.sampler.v1(wher.mu=pipeline.args['wher.mu',][, as.numeric(v)], wher.sigma=pipeline.args['wher.sigma',][, as.numeric(v)])#
	#	create sampler of between host evolutionary rate dampener#
	tmp					<- PANGEA.TransmissionEdgeEvolutionaryRate.create.sampler(er.meanlog=pipeline.args['bwerm.mu',][, as.numeric(v)], er.sdlog=pipeline.args['bwerm.sigma',][, as.numeric(v)])#
	rERbw				<- tmp$rERbw#
	rERbw.args			<- tmp$rERbw.args#
	#	create sampler of ancestral sequences#
	cat(paste('\ncreate sampler of ancestral sequences'))#
	tmp					<- subset( df.inds, !is.na(TIME_SEQ) )[, length(unique(IDCLU))]#
	cat(paste('\nnumber of clusters for which a sequence is required, n=', tmp))#
	tmp					<- ifelse(tmp<400, 0.5, ifelse(tmp<500, 1, 2))	#
	cat(paste('\nUsing root.ctime.grace=', tmp))#
	tmp					<- PANGEA.RootSeq.create.sampler(root.ctime.grace= tmp, sample.grace= 3 )	#
	rANCSEQ				<- tmp$rANCSEQ#
	rANCSEQ.args		<- tmp$rANCSEQ.args 	#
	#	read GTR parameters#
	log.df				<- PANGEA.GTR.params()#
	if(pipeline.args['dbg.rER',][, as.numeric(v)]==1 )#
	{#
		cat(paste('\nSetting mus to mean per gene and codon_pos'))#
		tmp				<- log.df[, list(mu= mean(mu)), by=c('GENE','CODON_POS')]#
		#tmp[, ER:=mu*log.df$meanRate[1]]#
		log.df			<- merge( subset(log.df, select=which(colnames(log.df)!='mu')), tmp, by=c('GENE','CODON_POS'))		#
	}		#
	if( pipeline.args['dbg.GTRparam',][, as.numeric(v)]==1 )#
	{#
		cat(paste('\nSetting GTR parameters to MEAN (except mu)'))#
		tmp				<- mean	#
		log.df			<- log.df[, list(state=state, mu=mu, alpha=tmp(alpha), at=tmp(at), ac=tmp(ac), cg=tmp(cg), ag=tmp(ag), gt=tmp(gt), meanRate=tmp(meanRate), a=tmp(a), c=tmp(c),  g=tmp(g), t=tmp(t) ), by=c('GENE','CODON_POS')]		#
	}		#
	log.df[, IDX:= seq_len(nrow(log.df))]#
	log.df[, FILE:=NULL]	#
	##
	##
	#	#
	infiles				<- list.files(indir.vts)#
	tmp					<- paste('^',infile.prefix,'.*nex$',sep='')#
	infiles				<- infiles[ grepl(tmp, infiles)  ]	#
	if(!length(infiles))	stop('cannot find files matching criteria')#
	##
	#	read from VirusTreeSimulator and convert branch lengths in time to branch lengths in subst/site#
	##
	df.ph				<- vector('list', length(infiles))#
	phd					<- vector('list', length(infiles))#
	phd.plot			<- vector('list', length(infiles))#
	df.nodestat			<- vector('list', length(infiles))#
	cat(paste('\nUsing StartTimeMode',pipeline.args['index.starttime.mode',][,v]))#
	root.edge.rate		<- NA#
	if( pipeline.args['index.starttime.mode',][,v]=='shift' )#
	{		#
		root.edge.rate	<- 1e-6#
		cat(paste('\nFix root edge rate to =',root.edge.rate))#
	}		#
	if( as.numeric(pipeline.args['root.edge.fixed',][,v] )) #
	{#
		root.edge.rate	<- log.df[1,meanRate]#
		cat(paste('\nFix root edge rate to =',root.edge.rate))		#
	}
for(i in seq_along(infiles))#
	{				#
		#i	<- 40#
		#i<- 47; i<- 9		#
		infile			<- infiles[i]#
		cat(paste('\nprocess file',i,infile))#
		file			<- paste(indir.vts, '/', infile, sep='')#
		#	read brl, units from annotated nexus file. attention: () may not contain two nodes#
		tmp				<- hivc.beast2out.read.nexus.and.stats(file, method.node.stat='any.node')#
		ph				<- tmp$tree#
		node.stat		<- tmp$node.stat#
		node.stat		<- subset(node.stat, STAT=='Unit')#
		set(node.stat, NULL, 'VALUE', node.stat[, gsub('\"','',VALUE)])#
		node.stat[, IDPOP:= as.integer(node.stat[,substr(VALUE, 4, nchar(VALUE))])]#
		node.stat		<- merge(subset(df.inds, select=c(IDPOP, GENDER, DOB, TIME_SEQ, IDCLU)), subset(node.stat, select=c(IDPOP, NODE_ID)), by='IDPOP')#
		#	produce collapsed tree with branch length in units of calendar time#
		phd[[i]]			<- seq.collapse.singles(ph)#
		##
		#	create collapsed Newick tree with expected substitutions / site for each branch #
		##
		#	draw within host evolutionary rates for every individual in the transmission chain, and	smaller ERs along the transmission lineages#
		node.stat		<- merge(node.stat, data.table( IDPOP=node.stat[, unique(IDPOP)], ER= rER.pol(node.stat[, length(unique(IDPOP))]), BWM= rERbw(node.stat[, length(unique(IDPOP))], rERbw.args) ), by='IDPOP')#
		#	re-set to previous notation in terms of BWM ( between host multiplier to ER, ie ER= within-host ER / BWM )#
		set(node.stat, NULL, 'BWM', node.stat[, ER/BWM])	#
		#	set BWM to 1 for all edges that are NOT leading to a transmission. #
		#	Because only one seq is sampled per patient, these are only edges that end in a tip.#
		set(node.stat, node.stat[, which( NODE_ID%in%seq.int(1,Ntip(ph)) )], 'BWM', 1.)#
		#	no ER possible for root node - there s no edge leading to it#
		set(node.stat, node.stat[, which(NODE_ID==Ntip(ph)+1)], c('ER','BWM'), NA_real_)		#
		#	set root edge evolutionary rate to overall mean between-host rate#
		#	get NODE_ID of edge from root#
		if(!is.na(root.edge.rate))#
		{#
			tmp				<- ph$edge[match(Ntip(ph)+1, ph$edge[1, ]), 2]#
			tmp				<- node.stat[, which(NODE_ID==tmp)]		#
			set(node.stat, tmp, 'ER', root.edge.rate )		#
			set(node.stat, tmp, 'BWM', 1. )		# no need to further slow down root edge			#
		}#
		#	check root edge length#
		if( pipeline.args['index.starttime.mode',][,v]=='fix45' )#
		{#
			stopifnot( ph$edge.length[ which( ph$edge[, 1] == Ntip(ph)+1 ) ]>=29.5 )			#
		}#
		#	check calendar time of root in simulated phylogeny for consistency#
		tmp				<- seq.collapse.singles(ph)#
		tmp2			<- regmatches(tmp$tip.label[1], regexpr('ID_[0-9]+',tmp$tip.label[1]))#
		tmp2			<- as.numeric(substr(tmp2, 4, nchar(tmp2)))#
		tmp2			<- subset(node.stat, IDPOP==tmp2)[1, TIME_SEQ]#
		root.ctime		<- ifelse(Nnode(tmp), tmp2 - (node.depth.edgelength(tmp)[1] + tmp$root.edge), tmp2-tmp$root.edge)		#
		tmp				<- subset(node.stat, IDPOP<0)[, unique(IDPOP)]#
		stopifnot(length(tmp)==1)#
		stopifnot(subset(df.trms, IDTR==tmp)[, round(IDTR_TIME_INFECTED, d=1)]==round(root.ctime, d=1))#
		#	check if all sampling times are consistent with node height#
		tmp				<- subset( node.stat, NODE_ID<=Ntip(ph) )#
		setkey(tmp, NODE_ID)#
		tmp2			<- seq.collapse.singles(ph) #
		if( Nnode(tmp2) )#
			tmp[, NODE_DEPTH:=root.ctime + tmp2$root.edge + node.depth.edgelength(tmp2)[ seq_len(Ntip(tmp2)) ] ]#
		if( Nnode(tmp2)==0 )#
			tmp[, NODE_DEPTH:=root.ctime + tmp2$root.edge ]#
		stopifnot( tmp[, max(abs(NODE_DEPTH-TIME_SEQ))<=1e-6 ] )#
		#	set expected numbers of substitutions per branch within individual IDPOP#
		setkey(node.stat, NODE_ID)#
		ph$edge.length	<- ph$edge.length * node.stat[ ph$edge[, 2], ][, ER / BWM]#
		stopifnot(all(!is.na(ph$edge.length)))		#
		#	once expected number of substitutions / site are simulated, can collapse singleton nodes#
		ph				<- seq.collapse.singles(ph)			#
		#	set tip label so that IDPOP can be checked for consistency	#
		if(pipeline.args['epi.model',][,v]=='HPTN071')#
			node.stat[, LABEL:= node.stat[, paste('IDPOP_',IDPOP,label.sep,GENDER,label.sep,'DOB_',round(DOB,d=3),label.sep,round(TIME_SEQ,d=3),sep='')]]#
		if(pipeline.args['epi.model',][,v]=='DSPS')#
			node.stat[, LABEL:= node.stat[, paste('IDPOP_',IDPOP,label.sep,GENDER,label.sep,'DOB_',NA,label.sep,round(TIME_SEQ,d=3),sep='')]]		#
		setkey(node.stat, NODE_ID)#
		ph$tip.label		<- node.stat[seq_len(Ntip(ph)), ][, LABEL]#
		phd[[i]]$tip.label	<- node.stat[seq_len(Ntip(phd[[i]])), ][, LABEL]#
		phd.plot[[i]]		<- seq.singleton2bifurcatingtree( phd[[i]] )#
		#phd[[i]]			<- seq.addrootnode( phd[[i]], dummy.label=paste('NOEXIST_IDCLU',node.stat[, unique(IDCLU)],'|NA|DOB_NA|',root.ctime,sep='') )#
		##
		df.nodestat[[i]]	<- node.stat#
		if(Nnode(ph))#
		{#
			tmp			<- write.tree(ph, digits = 10)			#
			tmp			<- paste( '(',substr(tmp,1,nchar(tmp)-1),',NOEXIST_NA|NA|DOB_NA|',root.ctime,':0):0;', sep='')#
			phd[[i]]	<- write.tree(phd[[i]], digits = 10)#
		}#
		if(!Nnode(ph))#
		{#
			tmp			<- paste( '(',ph$tip.label,':',ph$root.edge,',NOEXIST_NA|NA|DOB_NA|',root.ctime,':0):0;', sep='')#
			phd[[i]]	<- paste( '(',phd[[i]]$tip.label,':',phd[[i]]$root.edge, ');', sep='' )#
		}#
		df.ph[[i]]		<- data.table(ROOT_CALENDAR_TIME= root.ctime, IDCLU=node.stat[, unique(IDCLU)], NEWICK=tmp)#
		#readline()#
	}#
	#	write phylogenies of each transmission network into a single newick file#
	phd			<- sapply(phd,'[[',1)#
	file	<- paste(indir.epi, '/', substr(infile.epi,1,nchar(infile.epi)-6),'DATEDTREE.newick', sep='')#
	cat(paste('\nWrite to file=',file))#
	writeLines(phd, con=file)#
	#	get multifurcating cluster tree with brl in units of calendar time#
	phd			<- eval(parse(text=paste('phd.plot[[',seq_along(phd.plot),']]', sep='',collapse='+')))#
	phd			<- drop.tip(phd, which(grepl('DUMMY', phd$tip.label)), root.edge=1)#
	phd			<- ladderize(phd)#
	df.ph		<- do.call('rbind',df.ph)#
	df.nodestat	<- do.call('rbind',df.nodestat)#
	#	check that we have exactly one root edge with overall mean between host rate per cluster#
	if(!is.na(root.edge.rate))#
		stopifnot( df.nodestat[, length(unique(IDCLU))]==nrow(subset(df.nodestat, ER==root.edge.rate)) )
pipeline.args['startseq.mode',][,v]
df.ph
df.ph[, ROOT_CALENDAR_TIME]
stopifnot(all(abs(df.ph[1, ROOT_CALENDAR_TIME]-df.ph[, ROOT_CALENDAR_TIME])<2*EPS))
max(abs(df.ph[1, ROOT_CALENDAR_TIME]-df.ph[, ROOT_CALENDAR_TIME]))
EPS
max(abs(df.ph[1, ROOT_CALENDAR_TIME]-df.ph[, ROOT_CALENDAR_TIME]))<2*EPS
max(abs(df.ph[1, ROOT_CALENDAR_TIME]-df.ph[, ROOT_CALENDAR_TIME]))
2*EPS
stopifnot(max(abs(df.ph[1, ROOT_CALENDAR_TIME]-df.ph[, ROOT_CALENDAR_TIME]))<100*EPS)
root.ctime		<- df.ph[1, ROOT_CALENDAR_TIME]#
		tmp				<- rANCSEQ(root.ctime, rANCSEQ.args)#
		tmp				<- data.table(ANCSEQ= apply(as.character(tmp),1,function(x) paste(x, collapse='')) )#
		ancseq			<- data.table(ANCSEQ=rep(NA_character_, nrow(df.ph)))#
		set(ancseq, NULL, 'ANCSEQ', tmp[1,ANCSEQ])
nrow(ancseq)
ancseq
df.ph			<- cbind(df.ph, ancseq)#
	##
	#	create SEQ-GEN input file#
	#	#
	partition.len	<- c( ncol(rANCSEQ.args$anc.seq.gag), ncol(rANCSEQ.args$anc.seq.pol), ncol(rANCSEQ.args$anc.seq.env) )#
	#partition.er	<- c( 2.5, 4, 5 )#
	#	split ancestral sequence into GENE and CODON_POS#
	df.ph[, ANCSEQ.GAG:= substr(ANCSEQ, 1, partition.len[1])]#
	df.ph[, ANCSEQ.POL:= substr(ANCSEQ, partition.len[1]+1, partition.len[1]+partition.len[2])]#
	df.ph[, ANCSEQ.ENV:= substr(ANCSEQ, partition.len[1]+partition.len[2]+1, partition.len[1]+partition.len[2]+partition.len[3])]	#
	stopifnot( all( strsplit( df.ph[1, ANCSEQ], '')[[1]] == strsplit( paste( df.ph[1, ANCSEQ.GAG], df.ph[1, ANCSEQ.POL], df.ph[1, ANCSEQ.ENV], sep=''), '' )[[1]] ) )#
	df.ph[, ANCSEQ:=NULL]#
	df.ph	<- melt(df.ph, id.var=c('ROOT_CALENDAR_TIME','IDCLU','NEWICK'), value.name='ANCSEQ', variable.name='GENE', variable.factor=FALSE)#
	set(df.ph, NULL, 'GENE', df.ph[, substr(GENE, 8, nchar(GENE))])	#
	df.ph	<- df.ph[,  {#
				tmp	<- strsplit(ANCSEQ, '')#
				list( 	ANCSEQ.CP1= sapply(tmp, function(x) paste(x[seq.int(1,nchar(ANCSEQ[1]),3)],collapse='')  ),#
						ANCSEQ.CP2= sapply(tmp, function(x) paste(x[seq.int(2,nchar(ANCSEQ[1]),3)],collapse='') ),#
						ANCSEQ.CP3= sapply(tmp, function(x) paste(x[seq.int(3,nchar(ANCSEQ[1]),3)],collapse='')  ), ROOT_CALENDAR_TIME=ROOT_CALENDAR_TIME, IDCLU=IDCLU, NEWICK=NEWICK	)				#
			}, by='GENE']#
	df.ph	<- melt(df.ph, id.var=c('ROOT_CALENDAR_TIME','IDCLU','NEWICK','GENE'), value.name='ANCSEQ', variable.name='CODON_POS', variable.factor=FALSE)#
	set(df.ph, NULL, 'CODON_POS', df.ph[, substr(CODON_POS, 8, nchar(CODON_POS))])#
	##
	#	save to file all we need to call SeqGen#
	##
	file	<- paste(outdir.sg,'/',infile.prefix, 'seqgen.R',sep='')#
	cat(paste('\nsave to file=',file))#
	df.seqgen	<- df.ph#
	save(df.seqgen, log.df, df.nodestat, file=file)
set.seed(42)#
	indir		<- '/Users/Oliver/duke/2014_Gates/methods_comparison_pipeline/FINAL'#
	dfi			<- data.table(FILE=list.files(indir, '.*zip$', full.names=FALSE))
dfi
dfi[, SC:= sapply(strsplit(FILE, '_'),'[[',3)]#
	dfi[, CONFIG:= sapply(strsplit(SC, '-'),'[[',2)]#
	set(dfi, NULL, 'SC', dfi[, sapply(strsplit(SC, '-'),'[[',1)])
dfi
dfi[, DATAT:= sapply(strsplit(FILE, '_'),'[[',5)]
dfi
set(dfi, NULL, 'DATAT', dfi[, gsub('.zip','',DATAT,fixed=T)])
dfi
set(dfi, NULL, 'OBJECTIVE', 'Secondary')
set(dfi, dfi[,which(CONFIG=='sq')],'OBJECTIVE', 'Primary')
dfi
dfi			<- merge(dfi,dfi[, list(DUMMY=sample(length(FILE),length(FILE))), by='OBJECTIVE'],by='OBJECTIVE')
dfi[, list(DUMMY=sample(length(FILE),length(FILE))), by='OBJECTIVE']
set.seed(42)#
	indir		<- '/Users/Oliver/duke/2014_Gates/methods_comparison_pipeline/FINAL'#
	dfi			<- data.table(FILE=list.files(indir, '.*zip$', full.names=FALSE))#
	dfi[, SC:= sapply(strsplit(FILE, '_'),'[[',3)]#
	dfi[, CONFIG:= sapply(strsplit(SC, '-'),'[[',2)]#
	set(dfi, NULL, 'SC', dfi[, sapply(strsplit(SC, '-'),'[[',1)])#
	dfi[, DATAT:= sapply(strsplit(FILE, '_'),'[[',5)]#
	set(dfi, NULL, 'DATAT', dfi[, gsub('.zip','',DATAT,fixed=T)])#
	set(dfi, NULL, 'OBJECTIVE', 'Secondary')#
	set(dfi, dfi[,which(CONFIG=='sq')],'OBJECTIVE', 'Primary')#
	dfi			<- merge(dfi,dfi[, list(FILE=FILE, DUMMY=sample(length(FILE),length(FILE))), by='OBJECTIVE'],by=c('OBJECTIVE','FILE'))
dfi
setkey(dfi, DUMMY)
dfi
dfi[OBJECTIV=='Primary', max(DUMMY)]
dfi[OBJECTIVE=='Primary', max(DUMMY)]
set.seed(42)#
	indir		<- '/Users/Oliver/duke/2014_Gates/methods_comparison_pipeline/FINAL'#
	dfi			<- data.table(FILE=list.files(indir, '.*zip$', full.names=FALSE))#
	dfi[, SC:= sapply(strsplit(FILE, '_'),'[[',3)]#
	dfi[, CONFIG:= sapply(strsplit(SC, '-'),'[[',2)]#
	set(dfi, NULL, 'SC', dfi[, sapply(strsplit(SC, '-'),'[[',1)])#
	dfi[, DATAT:= sapply(strsplit(FILE, '_'),'[[',5)]#
	set(dfi, NULL, 'DATAT', dfi[, gsub('.zip','',DATAT,fixed=T)])#
	set(dfi, NULL, 'OBJECTIVE', 'Secondary')#
	set(dfi, dfi[,which(CONFIG=='sq')],'OBJECTIVE', 'Primary')#
	dfi			<- merge(dfi,dfi[, list(FILE=FILE, DUMMY=sample(length(FILE),length(FILE))), by='OBJECTIVE'],by=c('OBJECTIVE','FILE'))#
	tmp			<- dfi[, which(OBJECTIVE=='Secondary')]#
	set(dfi, tmp, 'DUMMY', dfi[tmp, DUMMY] + dfi[OBJECTIVE=='Primary', max(DUMMY)])
dfi
setkey(dfi, DUMMY)
dfi
letters
dfi[, SC_RND:= letters[seq_len(nrow(df))]]
dfi[, SC_RND:= letters[seq_len(nrow(dfi))]]
dfi
dfi[, GSUB_FROM:= sapply(strsplit(FILE, '_'),'[[',3)]
dfi
dfi[, GSUB_TO:= paste(OBJECTIVE,'_',SC_RND,pase='')]
dfi
dfi[, GSUB_TO:= paste(OBJECTIVE,'_',SC_RND,sep='')]
dfi
set.seed(42)#
	indir		<- '/Users/Oliver/duke/2014_Gates/methods_comparison_pipeline/FINAL'#
	dfi			<- data.table(FILE=list.files(indir, '.*zip$', full.names=FALSE))#
	dfi[, SC:= sapply(strsplit(FILE, '_'),'[[',3)]#
	dfi[, CONFIG:= sapply(strsplit(SC, '-'),'[[',2)]#
	set(dfi, NULL, 'SC', dfi[, sapply(strsplit(SC, '-'),'[[',1)])#
	dfi[, DATAT:= sapply(strsplit(FILE, '_'),'[[',5)]#
	set(dfi, NULL, 'DATAT', dfi[, gsub('.zip','',DATAT,fixed=T)])#
	set(dfi, NULL, 'OBJECTIVE', 'SecondObj')#
	set(dfi, dfi[,which(CONFIG=='sq')],'OBJECTIVE', 'FirstObj')#
	dfi			<- merge(dfi,dfi[, list(FILE=FILE, DUMMY=sample(length(FILE),length(FILE))), by='OBJECTIVE'],by=c('OBJECTIVE','FILE'))#
	tmp			<- dfi[, which(OBJECTIVE=='SecondObj')]#
	set(dfi, tmp, 'DUMMY', dfi[tmp, DUMMY] + dfi[OBJECTIVE=='FirstObj', max(DUMMY)])#
	setkey(dfi, DUMMY)#
	dfi[, SC_RND:= Letters[seq_len(nrow(dfi))]]
dfi[, SC_RND:= toupper(letters[seq_len(nrow(dfi))])]
dfi
dfi[, GSUB_FROM:= sapply(strsplit(FILE, '_'),'[[',3)]#
	dfi[, GSUB_TO:= paste(OBJECTIVE,'_sc',SC_RND,sep='')]
dfi
set.seed(42)#
	indir		<- '/Users/Oliver/duke/2014_Gates/methods_comparison_pipeline/FINAL'#
	dfi			<- data.table(FILE=list.files(indir, '.*zip$', full.names=FALSE))#
	dfi[, SC:= sapply(strsplit(FILE, '_'),'[[',3)]#
	dfi[, CONFIG:= sapply(strsplit(SC, '-'),'[[',2)]#
	set(dfi, NULL, 'SC', dfi[, sapply(strsplit(SC, '-'),'[[',1)])#
	dfi[, DATAT:= sapply(strsplit(FILE, '_'),'[[',5)]#
	set(dfi, NULL, 'DATAT', dfi[, gsub('.zip','',DATAT,fixed=T)])#
	set(dfi, NULL, 'OBJECTIVE', 'SecondObj')#
	set(dfi, dfi[,which(CONFIG=='sq')],'OBJECTIVE', 'FirstObj')#
	dfi			<- merge(dfi,dfi[, list(FILE=FILE, DUMMY=sample(length(FILE),length(FILE))), by='OBJECTIVE'],by=c('OBJECTIVE','FILE'))#
	tmp			<- dfi[, which(OBJECTIVE=='SecondObj')]#
	set(dfi, tmp, 'DUMMY', dfi[tmp, DUMMY] + dfi[OBJECTIVE=='FirstObj', max(DUMMY)])#
	setkey(dfi, DUMMY)#
	dfi[, SC_RND:= toupper(letters[seq_len(nrow(dfi))])]#
	dfi[, GSUB_FROM:= sapply(strsplit(FILE, '_'),'[[',3)]#
	dfi[, GSUB_TO:= paste(OBJECTIVE,'_sc',SC_RND,sep='')]
dfi
?zip
dfi[, {#
				cat(paste('process file',FILE))#
				unzip( paste(indir,'/',FILE,sep=''), exdir=paste(indir,'/tmp',SC_RND,sep=''))#
				stop()#
			}, by='DUMMY']
?file.rename
dfi[, {#
				cat(paste('process file',FILE))#
				tmpdir			<- paste(indir,'/tmp',SC_RND,sep='')#
				unzip( paste(indir,'/',FILE,sep=''), exdir=tmpdir)#
				files.name.o	<- list.files( paste(indir,'/tmp',SC_RND,sep='') )#
				files.name.n	<- gsub(GSUB_FROM,GSUB_TO,files.name.o)#
				file.rename( paste(tmpdir, files.name.o, sep='/'), paste(tmpdir, files.name.n, sep='/'))#
				stop()#
			}, by='DUMMY']
dfi[, {#
				cat(paste('process file',FILE))#
				tmpdir			<- paste(indir,'/tmp',SC_RND,sep='')#
				unzip( paste(indir,'/',FILE,sep=''), exdir=tmpdir)#
				files.name.o	<- list.files( paste(indir,'/tmp',SC_RND,sep='') )#
				files.name.n	<- gsub(GSUB_FROM,GSUB_TO,files.name.o)#
				files.name.n	<- gsub('HPTN071','Regional',files.name.n)#
				file.rename( paste(tmpdir, files.name.o, sep='/'), paste(tmpdir, files.name.n, sep='/'))#
				stop()#
			}, by='DUMMY']
dfi[, {#
				cat(paste('process file',FILE))#
				tmpdir			<- paste(indir,'/tmp',SC_RND,sep='')#
				unzip( paste(indir,'/',FILE,sep=''), exdir=tmpdir)#
				files.name.o	<- list.files( paste(indir,'/tmp',SC_RND,sep='') )#
				files.name.n	<- gsub(GSUB_FROM,GSUB_TO,files.name.o)#
				files.name.n	<- gsub('HPTN071','PANGEAsim_Regional',files.name.n)#
				file.rename( paste(tmpdir, files.name.o, sep='/'), paste(tmpdir, files.name.n, sep='/'))#
				stop()#
			}, by='DUMMY']
?zip
dfi[, {#
				cat(paste('process file',FILE))#
				tmpdir			<- paste(indir,'/tmp',SC_RND,sep='')#
				unzip( paste(indir,'/',FILE,sep=''), exdir=tmpdir)#
				files.name.o	<- list.files( paste(indir,'/tmp',SC_RND,sep='') )#
				files.name.n	<- gsub(GSUB_FROM,GSUB_TO,files.name.o)#
				files.name.n	<- gsub('HPTN071','PANGEAsim_Regional',files.name.n)#
				file.rename( paste(tmpdir, files.name.o, sep='/'), paste(tmpdir, files.name.n, sep='/'))#
				newzip			<- gsub(GSUB_FROM,GSUB_TO,FILE)#
				newzip			<- gsub('HPTN071','PANGEAsim_Regional',newzip)#
				zip(  paste(indir,'/',newzip,sep=''), paste(tmpdir, files.name.n, sep='/'), flags = "-FSr9XTj")#
				stop()#
			}, by='DUMMY']
outdir		<- '/Users/Oliver/duke/2014_Gates/methods_comparison_pipeline/FINAL_RND'
dfi[, {#
				cat(paste('process file',FILE))#
				tmpdir			<- paste(indir,'/tmp',SC_RND,sep='')#
				unzip( paste(indir,'/',FILE,sep=''), exdir=tmpdir)#
				files.name.o	<- list.files( paste(indir,'/tmp',SC_RND,sep='') )#
				files.name.n	<- gsub(GSUB_FROM,GSUB_TO,files.name.o)#
				files.name.n	<- gsub('HPTN071','PANGEAsim_Regional',files.name.n)#
				file.rename( paste(tmpdir, files.name.o, sep='/'), paste(tmpdir, files.name.n, sep='/'))#
				newzip			<- gsub(GSUB_FROM,GSUB_TO,FILE)#
				newzip			<- gsub('HPTN071','PANGEAsim_Regional',newzip)#
				zip(  paste(outdir,'/',newzip,sep=''), paste(tmpdir, files.name.n, sep='/'), flags = "-FSr9XTj")#
				stop()#
			}, by='DUMMY']
?file.rename
dfi[, {#
				cat(paste('process file',FILE))#
				tmpdir			<- paste(indir,'/tmp',SC_RND,sep='')#
				unzip( paste(indir,'/',FILE,sep=''), exdir=tmpdir)#
				files.name.o	<- list.files( paste(indir,'/tmp',SC_RND,sep='') )#
				files.name.n	<- gsub(GSUB_FROM,GSUB_TO,files.name.o)#
				files.name.n	<- gsub('HPTN071','PANGEAsim_Regional',files.name.n)#
				file.rename( paste(tmpdir, files.name.o, sep='/'), paste(tmpdir, files.name.n, sep='/'))#
				newzip			<- gsub(GSUB_FROM,GSUB_TO,FILE)#
				newzip			<- gsub('HPTN071','PANGEAsim_Regional',newzip)#
				zip(  paste(outdir,'/',newzip,sep=''), paste(tmpdir, files.name.n, sep='/'), flags = "-FSr9XTj")#
				file.remove( paste(tmpdir, files.name.n, sep='/') )#
				file.remove( tmpdir )#
				stop()#
			}, by='DUMMY']
dfi[, {#
				cat(paste('process file',FILE))#
				tmpdir			<- paste(indir,'/tmp',SC_RND,sep='')#
				unzip( paste(indir,'/',FILE,sep=''), exdir=tmpdir)#
				files.name.o	<- list.files( paste(indir,'/tmp',SC_RND,sep='') )#
				files.name.n	<- gsub(GSUB_FROM,GSUB_TO,files.name.o)#
				files.name.n	<- gsub('HPTN071','PANGEAsim_Regional',files.name.n)#
				file.rename( paste(tmpdir, files.name.o, sep='/'), paste(tmpdir, files.name.n, sep='/'))#
				newzip			<- gsub(GSUB_FROM,GSUB_TO,FILE)#
				newzip			<- gsub('HPTN071','PANGEAsim_Regional',newzip)#
				zip(  paste(outdir,'/',newzip,sep=''), paste(tmpdir, files.name.n, sep='/'), flags = "-FSr9XTj")#
				#file.remove( paste(tmpdir, files.name.n, sep='/') )#
				file.remove( tmpdir )#
				stop()#
			}, by='DUMMY']
?file.remove
dfi[, {#
				cat(paste('process file',FILE))#
				tmpdir			<- paste(indir,'/tmp',SC_RND,sep='')#
				unzip( paste(indir,'/',FILE,sep=''), exdir=tmpdir)#
				files.name.o	<- list.files( paste(indir,'/tmp',SC_RND,sep='') )#
				files.name.n	<- gsub(GSUB_FROM,GSUB_TO,files.name.o)#
				files.name.n	<- gsub('HPTN071','PANGEAsim_Regional',files.name.n)#
				file.rename( paste(tmpdir, files.name.o, sep='/'), paste(tmpdir, files.name.n, sep='/'))#
				newzip			<- gsub(GSUB_FROM,GSUB_TO,FILE)#
				newzip			<- gsub('HPTN071','PANGEAsim_Regional',newzip)#
				zip(  paste(outdir,'/',newzip,sep=''), paste(tmpdir, files.name.n, sep='/'), flags = "-FSr9XTj")#
				file.remove( paste(tmpdir, files.name.n, sep='/') , showWarnings=FALSE)#
				file.remove( tmpdir )#
				stop()#
			}, by='DUMMY']
tmp		<- dfi[, {#
				cat(paste('process file',FILE))#
				tmpdir			<- paste(indir,'/tmp',SC_RND,sep='')#
				unzip( paste(indir,'/',FILE,sep=''), exdir=tmpdir)#
				files.name.o	<- list.files( paste(indir,'/tmp',SC_RND,sep='') )#
				files.name.n	<- gsub(GSUB_FROM,GSUB_TO,files.name.o)#
				files.name.n	<- gsub('HPTN071','PANGEAsim_Regional',files.name.n)#
				file.rename( paste(tmpdir, files.name.o, sep='/'), paste(tmpdir, files.name.n, sep='/'))#
				newzip			<- gsub(GSUB_FROM,GSUB_TO,FILE)#
				newzip			<- gsub('HPTN071','PANGEAsim_Regional',newzip)#
				zip(  paste(outdir,'/',newzip,sep=''), paste(tmpdir, files.name.n, sep='/'), flags = "-FSr9XTj")#
				file.remove( paste(tmpdir, files.name.n, sep='/'), showWarnings=FALSE)#
				file.remove( tmpdir, showWarnings=FALSE )				#
			}, by='DUMMY']
set.seed(42)#
	indir		<- '/Users/Oliver/duke/2014_Gates/methods_comparison_pipeline/FINAL'#
	outdir		<- '/Users/Oliver/duke/2014_Gates/methods_comparison_pipeline/FINAL_RND'#
	dfi			<- data.table(FILE=list.files(indir, '.*zip$', full.names=FALSE))#
	dfi[, SC:= sapply(strsplit(FILE, '_'),'[[',3)]#
	dfi[, CONFIG:= sapply(strsplit(SC, '-'),'[[',2)]#
	set(dfi, NULL, 'SC', dfi[, sapply(strsplit(SC, '-'),'[[',1)])#
	dfi[, DATAT:= sapply(strsplit(FILE, '_'),'[[',5)]#
	set(dfi, NULL, 'DATAT', dfi[, gsub('.zip','',DATAT,fixed=T)])#
	set(dfi, NULL, 'OBJECTIVE', 'SecondObj')#
	set(dfi, dfi[,which(CONFIG=='sq')],'OBJECTIVE', 'FirstObj')#
	dfi			<- merge(dfi,dfi[, list(FILE=FILE, DUMMY=sample(length(FILE),length(FILE))), by='OBJECTIVE'],by=c('OBJECTIVE','FILE'))#
	tmp			<- dfi[, which(OBJECTIVE=='SecondObj')]#
	set(dfi, tmp, 'DUMMY', dfi[tmp, DUMMY] + dfi[OBJECTIVE=='FirstObj', max(DUMMY)])#
	setkey(dfi, DUMMY)#
	dfi[, SC_RND:= toupper(letters[seq_len(nrow(dfi))])]#
	dfi[, GSUB_FROM:= sapply(strsplit(FILE, '_'),'[[',3)]#
	dfi[, GSUB_TO:= paste(OBJECTIVE,'_sc',SC_RND,sep='')]#
	tmp		<- dfi[, {#
				cat(paste('process file',FILE))#
				tmpdir			<- paste(indir,'/tmp',SC_RND,sep='')#
				unzip( paste(indir,'/',FILE,sep=''), exdir=tmpdir)#
				files.name.o	<- list.files( paste(indir,'/tmp',SC_RND,sep='') )#
				files.name.n	<- gsub(GSUB_FROM,GSUB_TO,files.name.o)#
				files.name.n	<- gsub('HPTN071','PANGEAsim_Regional',files.name.n)#
				file.rename( paste(tmpdir, files.name.o, sep='/'), paste(tmpdir, files.name.n, sep='/'))#
				newzip			<- gsub(GSUB_FROM,GSUB_TO,FILE)#
				newzip			<- gsub('HPTN071','PANGEAsim_Regional',newzip)#
				zip(  paste(outdir,'/',newzip,sep=''), paste(tmpdir, files.name.n, sep='/'), flags = "-FSr9XTj")#
				file.remove( paste(tmpdir, files.name.n, sep='/'), showWarnings=FALSE)#
				file.remove( tmpdir, showWarnings=FALSE )				#
			}, by='DUMMY']
warnings()
CODE.HOME		<<- "/Users/Oliver/git/phylowidget"#
#
function.list	<- c(	list.files(path= paste(CODE.HOME,"R",sep='/'), pattern = ".R$", all.files = FALSE, full.names = TRUE, recursive = FALSE),#
						paste(CODE.HOME,"misc","phylowidget_dev.R",sep='/') )#
sapply(function.list, function(x){ print(x); source(x,echo=FALSE,print.eval=FALSE, verbose=FALSE) })
CODE.HOME		<<- "/Users/Oliver/git/phylowidget"#
#
function.list	<- c(	list.files(path= paste(CODE.HOME,"R",sep='/'), pattern = ".R$", all.files = FALSE, full.names = TRUE, recursive = FALSE),#
						paste(CODE.HOME,"misc","phylowidget_dev.R",sep='/') )
function.list
CODE.HOME		<<- "/Users/Oliver/git/phylowidget"#
#
function.list	<- c(	list.files(path= paste(CODE.HOME,"R",sep='/'), pattern = ".R$", all.files = FALSE, full.names = TRUE, recursive = FALSE),#
		paste(CODE.HOME,"misc","phylowidget_dev.R",sep='/') )#
sapply(function.list, function(x){ print(x); source(x,echo=FALSE,print.eval=FALSE, verbose=FALSE) })
CODE.HOME		<<- "/Users/Oliver/git/phylowidget"#
#
function.list	<- c(	list.files(path= paste(CODE.HOME,"R",sep='/'), pattern = ".R$", all.files = FALSE, full.names = TRUE, recursive = FALSE),#
		paste(CODE.HOME,"misc","phylowidget_dev.R",sep='/') )
function.list
sapply(function.list, function(x){ print(x); source(x,echo=FALSE,print.eval=FALSE, verbose=FALSE) })
library(ape)#
	newick	<- '(((IDPOP_57940|M|DOB_1982.42|2017.79:5.310678642,IDPOP_100355|F|DOB_2000.33|2019.42:6.940678642):4.079899099,IDPOP_55021|F|DOB_1980.77|2011.29:2.890577741):7.525940803,IDPOP_28039|M|DOB_1961.31|2018.69:17.81651854):45.87348146;'#
	ph		<- read.newick(newick)#
	plot(ph)
newick	<- '(((IDPOP_57940|M|DOB_1982.42|2017.79:5.310678642,IDPOP_100355|F|DOB_2000.33|2019.42:6.940678642):4.079899099,IDPOP_55021|F|DOB_1980.77|2011.29:2.890577741):7.525940803,IDPOP_28039|M|DOB_1961.31|2018.69:17.81651854):45.87348146;'#
	ph		<- read.newick(text=newick)#
	plot(ph)
phylowidget(newick)
library(htmlwidgets)
phylowidget(newick)
phylowidget
CODE.HOME		<<- "/Users/Oliver/git/phylowidget"#
#	reload all R code#
function.list	<- c(	list.files(path= paste(CODE.HOME,"R",sep='/'), pattern = ".R$", all.files = FALSE, full.names = TRUE, recursive = FALSE),#
		paste(CODE.HOME,"misc","phylowidget_dev.R",sep='/') )#
dummy			<- sapply(function.list, function(x){ print(x); source(x,echo=FALSE,print.eval=FALSE, verbose=FALSE) })
library(ape)#
	library(htmlwidgets)#
	newick	<- '(((IDPOP_57940|M|DOB_1982.42|2017.79:5.310678642,IDPOP_100355|F|DOB_2000.33|2019.42:6.940678642):4.079899099,IDPOP_55021|F|DOB_1980.77|2011.29:2.890577741):7.525940803,IDPOP_28039|M|DOB_1961.31|2018.69:17.81651854):45.87348146;'
phylowidget(newick)
phylowidget
?createWidget
library(phylowidget)#
	newick	<- '(((IDPOP_57940|M|DOB_1982.42|2017.79:5.310678642,IDPOP_100355|F|DOB_2000.33|2019.42:6.940678642):4.079899099,IDPOP_55021|F|DOB_1980.77|2011.29:2.890577741):7.525940803,IDPOP_28039|M|DOB_1961.31|2018.69:17.81651854):45.87348146;'
phylowidget(newick)
phylowidget(newick)
library(devtools)#
	?devtools::install
library(ape)#
	library(htmlwidgets)#
	library(phylowidget)#
	library(devtools)#
	code.dir	<- "/Users/Oliver/git/phylowidget"#
	devtools::install(code.dir)
code.dir	<- "/Users/Oliver/git/phylowidget"#
	devtools::install(code.dir)#
	newick	<- '(((IDPOP_57940|M|DOB_1982.42|2017.79:5.310678642,IDPOP_100355|F|DOB_2000.33|2019.42:6.940678642):4.079899099,IDPOP_55021|F|DOB_1980.77|2011.29:2.890577741):7.525940803,IDPOP_28039|M|DOB_1961.31|2018.69:17.81651854):45.87348146;'
phylowidget(newick)
newick	<- '(((IDPOP_57940|M|DOB_1982.42|2017.79:5.310678642,IDPOP_100355|F|DOB_2000.33|2019.42:6.940678642):4.079899099,IDPOP_55021|F|DOB_1980.77|2011.29:2.890577741):7.525940803,IDPOP_28039|M|DOB_1961.31|2018.69:17.81651854);'
phylowidget(newick)
newick	<- '(((IDPOP_57940:5.310678642,IDPOP_100355:6.940678642):4.079899099,IDPOP_55021:2.890577741):7.525940803,IDPOP_28039:17.81651854);'
phylowidget(newick)
library(ape)#
	library(htmlwidgets)#
	library(phylowidget)#
	library(devtools)#
	code.dir	<- "/Users/Oliver/git/phylowidget"#
	devtools::install(code.dir)
newick	<- '(((IDPOP_57940:5.310678642,IDPOP_100355:6.940678642):4.079899099,IDPOP_55021:2.890577741):7.525940803,IDPOP_28039:17.81651854);'#
	#ph		<- read.newick(text=newick)#
	#plot(ph)	#
	phylowidget(newick)
newick
library(ape)#
	library(htmlwidgets)#
	library(phylowidget)#
	library(devtools)#
	code.dir	<- "/Users/Oliver/git/phylowidget"#
	devtools::install(code.dir)
newick	<- '(((IDPOP_57940:5.310678642,IDPOP_100355:6.940678642):4.079899099,IDPOP_55021:2.890577741):7.525940803,IDPOP_28039:17.81651854);'
phylowidget(newick)
phylowidget
